{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hackweek Introduction Overview Welcome to the Waterhackweek hackweek! Hackweeks were originally designed by the University of Washington's eScience Institute , and they aim to provide a welcoming learning environment where you can learn new software tools, collaborate with colleagues, build community and make progress on specific projects. Our hackweek model is constantly evolving and we invite you actively participate as we experiment with new approaches and ideas. This preliminary tutorial is one that we would like you to complete before arriving to the hackweek. The purpose is to learn about how we plan to work with various software tools and how you can best prepare for our event. We would like everyone works through this tutorial so that we can make the best use of our time together in person. What is the format of this event? Here is a general roadmap of our event: we begin the hackweek with a review of our code of conduct, and we build a set of guidelines for co-creating a positive and welcoming learning environment each day will include some combination of tutorials, short presentations and/or open project time / hacking. we will guide participants through the formation of groups early in the event we'll check-in with project teams on a regular basis to find what's working and where challenges lie. there will be opportunities for peer learning and open tutorials on topics of most interest to the group participants will be invited to present their work at the end of the event Will my laptop work for this hackathon? All participants will be required to have their own laptop. The absolute minimum requirement is any laptop with a functioning web browser so that you can access our shared cloud computing resources. We will also teach you to install software on your own computer. For that we recommend the following: Windows Vista or newer, MAC OS X 10.7+, or Linux (Ubuntu, RedHat and others; CentOS 5+) 32-bit or 64-bit Minimum 3 GB disk space to download and install software If you do not have a laptop, please contact us and we might be able to loan you one during the event. Will I need to learn a specific programming language to participate? We welcome all participants regardless of their programming background. In order to teach our content in a consistent way we need to select one programming languge. We have chosen Python because it is free and open source, and has many libraries suitable for efficient manipulation of a variety of different types of data. What can I do in advance to prepare? We require all participants to work through the following lessons in advance of our event. The lessons are brief and will ensure that we are all set up and ready to work when we arrive. Setting up your laptop and getting access to computing resources Introduction to Github : setting up a GitHub account Introduction to Conda : installing Python on your laptop GEE Access and Javascript Tips : setting up Google Earth Engine account Learning Python Basics Self-working notebooks to understand practical aspects of Numpy and Pandas Introduction to Numpy Introduction to Pandas How do I ask questions about the Hackweek? If you have technical or general questions about the Hackweek, we are here to help. First, you can use the General channel on Slack . Second, we have Cyberseminars scheduled on specific days, for which you can find the schedule here .","title":"Introduction"},{"location":"#hackweek-introduction","text":"","title":"Hackweek Introduction"},{"location":"#overview","text":"Welcome to the Waterhackweek hackweek! Hackweeks were originally designed by the University of Washington's eScience Institute , and they aim to provide a welcoming learning environment where you can learn new software tools, collaborate with colleagues, build community and make progress on specific projects. Our hackweek model is constantly evolving and we invite you actively participate as we experiment with new approaches and ideas. This preliminary tutorial is one that we would like you to complete before arriving to the hackweek. The purpose is to learn about how we plan to work with various software tools and how you can best prepare for our event. We would like everyone works through this tutorial so that we can make the best use of our time together in person.","title":"Overview"},{"location":"#what-is-the-format-of-this-event","text":"Here is a general roadmap of our event: we begin the hackweek with a review of our code of conduct, and we build a set of guidelines for co-creating a positive and welcoming learning environment each day will include some combination of tutorials, short presentations and/or open project time / hacking. we will guide participants through the formation of groups early in the event we'll check-in with project teams on a regular basis to find what's working and where challenges lie. there will be opportunities for peer learning and open tutorials on topics of most interest to the group participants will be invited to present their work at the end of the event","title":"What is the format of this event?"},{"location":"#will-my-laptop-work-for-this-hackathon","text":"All participants will be required to have their own laptop. The absolute minimum requirement is any laptop with a functioning web browser so that you can access our shared cloud computing resources. We will also teach you to install software on your own computer. For that we recommend the following: Windows Vista or newer, MAC OS X 10.7+, or Linux (Ubuntu, RedHat and others; CentOS 5+) 32-bit or 64-bit Minimum 3 GB disk space to download and install software If you do not have a laptop, please contact us and we might be able to loan you one during the event.","title":"Will my laptop work for this hackathon?"},{"location":"#will-i-need-to-learn-a-specific-programming-language-to-participate","text":"We welcome all participants regardless of their programming background. In order to teach our content in a consistent way we need to select one programming languge. We have chosen Python because it is free and open source, and has many libraries suitable for efficient manipulation of a variety of different types of data.","title":"Will I need to learn a specific programming language to participate?"},{"location":"#what-can-i-do-in-advance-to-prepare","text":"We require all participants to work through the following lessons in advance of our event. The lessons are brief and will ensure that we are all set up and ready to work when we arrive.","title":"What can I do in advance to prepare?"},{"location":"#setting-up-your-laptop-and-getting-access-to-computing-resources","text":"Introduction to Github : setting up a GitHub account Introduction to Conda : installing Python on your laptop GEE Access and Javascript Tips : setting up Google Earth Engine account","title":"Setting up your laptop and getting access to computing resources"},{"location":"#learning-python-basics","text":"Self-working notebooks to understand practical aspects of Numpy and Pandas Introduction to Numpy Introduction to Pandas","title":"Learning Python Basics"},{"location":"#how-do-i-ask-questions-about-the-hackweek","text":"If you have technical or general questions about the Hackweek, we are here to help. First, you can use the General channel on Slack . Second, we have Cyberseminars scheduled on specific days, for which you can find the schedule here .","title":"How do I ask questions about the Hackweek?"},{"location":"VocabAcronyms2020/","text":"Vocabulary This page explains some of the terms encountered during Cyberseminars and links to resources on where to learn more about them. Platforms Hydroshare: an online, collaborative Hydrologic Information System for sharing hydrologic data, models, and code. Software Libraries Numpy: NumPy is a library for the Python programming language, adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays. Matplotlib: Matplotlib is a plotting library for the Python programming language and its numerical mathematics extension NumPy. It provides an object-oriented API for embedding plots into applications. Pandas: Pandas is a software library written for the Python programming language for data manipulation and analysis. In particular, it offers data structures and operations for manipulating numerical tables and time series. Anaconda: Anaconda is a free and open-source distribution of the Python and R programming languages for scientific computing, that aims to simplify package management and deployment. Tools and Methods Jupyter Notebooks: The Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, data visualization, machine learning, and much more Docker: An image is a executable package that includes everything needed to run a piece of software, including the code, a runtime, libraries, environment variables, and configuration files. A container is a runtime instance of an image \u2013 what the image becomes in memory when actually executed. It runs completely isolated from the host environment by default, only accessing host files and ports if configured to do so. Landlab \u2013 a Python-based modeling environment that allows scientists and students to build numerical landscape models. Acronyms WHW : Waterhackweek :) CUAHSI : The Consortium of Universities for the Advancement of Hydrologic Science, Inc. is a 501(c) 3 research organization representing more than 100 U.S. universities and international water science-related organizations. In addition to HydroShare NSF PI and community support, CUAHSI will maintain, develop and support HydroShare infrastructure and users. XSEDE : The Extreme Science and Engineering Discovery Environment (XSEDE) is a single virtual system that scientists can use to interactively share computing resources, data and expertise. CyberGIS - a center at the University of Illinois at Urbana-Champaign for Advanced Digital and Spatial Studies. They support big geospatial data solutions in many areas of scholarship, ranging from engineering and science to the humanities. AGU : American Geophysical Union NCSA - National Center for Supercomputing Applications at University of Illinois at Urbana-Champaign. ROGER - Resourcing Open Geospatial Education and Research and the Father of GIS, Roger Tomlinson) is the world's first-ever CyberGIS Supercomputer designed especially for computationally intensive geospatial data processing and analysis. ROGER is managed by NCSA at the CyberGIS Center for Advanced Digital and Spatial Studies","title":"Vocabulary and Acronyms"},{"location":"VocabAcronyms2020/#vocabulary","text":"This page explains some of the terms encountered during Cyberseminars and links to resources on where to learn more about them.","title":"Vocabulary"},{"location":"VocabAcronyms2020/#platforms","text":"Hydroshare: an online, collaborative Hydrologic Information System for sharing hydrologic data, models, and code.","title":"Platforms"},{"location":"VocabAcronyms2020/#software-libraries","text":"Numpy: NumPy is a library for the Python programming language, adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays. Matplotlib: Matplotlib is a plotting library for the Python programming language and its numerical mathematics extension NumPy. It provides an object-oriented API for embedding plots into applications. Pandas: Pandas is a software library written for the Python programming language for data manipulation and analysis. In particular, it offers data structures and operations for manipulating numerical tables and time series. Anaconda: Anaconda is a free and open-source distribution of the Python and R programming languages for scientific computing, that aims to simplify package management and deployment.","title":"Software Libraries"},{"location":"VocabAcronyms2020/#tools-and-methods","text":"Jupyter Notebooks: The Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, data visualization, machine learning, and much more Docker: An image is a executable package that includes everything needed to run a piece of software, including the code, a runtime, libraries, environment variables, and configuration files. A container is a runtime instance of an image \u2013 what the image becomes in memory when actually executed. It runs completely isolated from the host environment by default, only accessing host files and ports if configured to do so. Landlab \u2013 a Python-based modeling environment that allows scientists and students to build numerical landscape models.","title":"Tools and Methods"},{"location":"VocabAcronyms2020/#acronyms","text":"WHW : Waterhackweek :) CUAHSI : The Consortium of Universities for the Advancement of Hydrologic Science, Inc. is a 501(c) 3 research organization representing more than 100 U.S. universities and international water science-related organizations. In addition to HydroShare NSF PI and community support, CUAHSI will maintain, develop and support HydroShare infrastructure and users. XSEDE : The Extreme Science and Engineering Discovery Environment (XSEDE) is a single virtual system that scientists can use to interactively share computing resources, data and expertise. CyberGIS - a center at the University of Illinois at Urbana-Champaign for Advanced Digital and Spatial Studies. They support big geospatial data solutions in many areas of scholarship, ranging from engineering and science to the humanities. AGU : American Geophysical Union NCSA - National Center for Supercomputing Applications at University of Illinois at Urbana-Champaign. ROGER - Resourcing Open Geospatial Education and Research and the Father of GIS, Roger Tomlinson) is the world's first-ever CyberGIS Supercomputer designed especially for computationally intensive geospatial data processing and analysis. ROGER is managed by NCSA at the CyberGIS Center for Advanced Digital and Spatial Studies","title":"Acronyms"},{"location":"conda/","text":"Conda Basics Overview What happens after the event when you want to go home and work with all the libraries ? You will likely also want to have a functioning version of Python on your local laptop if that is not already in place. So this lesson takes you through our recommended procedure for doing that. We suggest you get this set up in advance so that we can help you troubleshoot when you arrive. Python Software Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7, although Python 2.7 will not be supported past 2020. Some libraries only work with specific versions of Python. So even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during the hackweek. We also provide instructions for using Anaconda , which is our recommended Python distribution, for installing and working with Python on your local computer. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on. What is Conda? Conda is an open source package and environment management system for any programming languages, but very popular among python community, for installing multiple versions of software packages, their dependencies and switching easily between them. It works on Linux, OS X and Windows. Installing Miniconda Windows Click here to download the proper installer for your Windows platform (64 bits). We recommend to download the Python 3 version of Miniconda. You can still create Python 2 environments using the Python 3 version of Miniconda. When installing, you will be asked if you wish to make the Anaconda Python your default Python for Windows. If you do not have any other installation that is a good option. If you want to keep multiple versions of python on your machine (e.g. ESRI-supplied python, or 64 bit versions of Anaconda), then don't select the option to modify your path or modify your windows registry settings. Linux and OSX You may follow manual steps from here similar to the instructions on Windows (see above). Alternatively, you can execute these commands on a terminal shell (in this case, the bash shell): # For MacOSX url=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh # For Linux url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh wget $url -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda export PATH=\"$HOME/miniconda/bin:$PATH\" conda update conda --yes Installing Anaconda (Optional) NOTE: If you don't have time or disk space for the entire distribution do not install Anaconda. Install only Miniconda , a bootstrap version of Anaconda, which contains only Python, essential packages, and conda. We will provide an environment file to install all the packages necessary for the hackweek. Anaconda is a data science platform that comes with a lot of packages. At its core, Anaconda uses the conda package management system. The list of packages included can be found here To install Anaconda, please click on the link below for your operating system, and follow the instructions on the site . Once Anaconda installation step is finished run python in the command line to test if Anaconda is installed correctly. Note: For windows, please use the Anaconda prompt as the command line. It should be installed with your installation of Anaconda If Anaconda is installed correctly, you should have this prompt, which emphasizes Anaconda : $ python Python 3.7.3|Anaconda custom (x86_64)| (default, Mar 27 2019, 22:11:17) ... Installing Python We will be using Python 3.6 or 3.7 during the week (either will work). Since Anaconda (on Linux) expects you to work in the \"bash\" shell, if this is not already your default shell, you need to set it to be so (use the \"chsh -s /bin/bash\" command to change your default shell to bash) or just run an instance of bash from the command line before issuing \"Conda\" commands (/bin/bash or where it is located on your system). If you are already familiar with Python 2.7, you can take a look at the syntax differences here , but the main point to remember is to put the print statements in parentheses: print('Hello World!') $ conda create -n py37 python=3.7 To use Python 3.7: $ conda activate py37 To check if you have the correct version: $ python --version","title":"Conda Basics"},{"location":"conda/#conda-basics","text":"","title":"Conda Basics"},{"location":"conda/#overview","text":"What happens after the event when you want to go home and work with all the libraries ? You will likely also want to have a functioning version of Python on your local laptop if that is not already in place. So this lesson takes you through our recommended procedure for doing that. We suggest you get this set up in advance so that we can help you troubleshoot when you arrive.","title":"Overview"},{"location":"conda/#python-software","text":"Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7, although Python 2.7 will not be supported past 2020. Some libraries only work with specific versions of Python. So even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during the hackweek. We also provide instructions for using Anaconda , which is our recommended Python distribution, for installing and working with Python on your local computer. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on.","title":"Python Software"},{"location":"conda/#what-is-conda","text":"Conda is an open source package and environment management system for any programming languages, but very popular among python community, for installing multiple versions of software packages, their dependencies and switching easily between them. It works on Linux, OS X and Windows.","title":"What is Conda?"},{"location":"conda/#installing-miniconda","text":"","title":"Installing Miniconda"},{"location":"conda/#windows","text":"Click here to download the proper installer for your Windows platform (64 bits). We recommend to download the Python 3 version of Miniconda. You can still create Python 2 environments using the Python 3 version of Miniconda. When installing, you will be asked if you wish to make the Anaconda Python your default Python for Windows. If you do not have any other installation that is a good option. If you want to keep multiple versions of python on your machine (e.g. ESRI-supplied python, or 64 bit versions of Anaconda), then don't select the option to modify your path or modify your windows registry settings.","title":"Windows"},{"location":"conda/#linux-and-osx","text":"You may follow manual steps from here similar to the instructions on Windows (see above). Alternatively, you can execute these commands on a terminal shell (in this case, the bash shell): # For MacOSX url=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh # For Linux url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh wget $url -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda export PATH=\"$HOME/miniconda/bin:$PATH\" conda update conda --yes","title":"Linux and OSX"},{"location":"conda/#installing-anaconda-optional","text":"NOTE: If you don't have time or disk space for the entire distribution do not install Anaconda. Install only Miniconda , a bootstrap version of Anaconda, which contains only Python, essential packages, and conda. We will provide an environment file to install all the packages necessary for the hackweek. Anaconda is a data science platform that comes with a lot of packages. At its core, Anaconda uses the conda package management system. The list of packages included can be found here To install Anaconda, please click on the link below for your operating system, and follow the instructions on the site . Once Anaconda installation step is finished run python in the command line to test if Anaconda is installed correctly. Note: For windows, please use the Anaconda prompt as the command line. It should be installed with your installation of Anaconda If Anaconda is installed correctly, you should have this prompt, which emphasizes Anaconda : $ python Python 3.7.3|Anaconda custom (x86_64)| (default, Mar 27 2019, 22:11:17) ...","title":"Installing Anaconda (Optional)"},{"location":"conda/#installing-python","text":"We will be using Python 3.6 or 3.7 during the week (either will work). Since Anaconda (on Linux) expects you to work in the \"bash\" shell, if this is not already your default shell, you need to set it to be so (use the \"chsh -s /bin/bash\" command to change your default shell to bash) or just run an instance of bash from the command line before issuing \"Conda\" commands (/bin/bash or where it is located on your system). If you are already familiar with Python 2.7, you can take a look at the syntax differences here , but the main point to remember is to put the print statements in parentheses: print('Hello World!') $ conda create -n py37 python=3.7 To use Python 3.7: $ conda activate py37 To check if you have the correct version: $ python --version","title":"Installing Python"},{"location":"diversityMethods/","text":"Diversity Statement Overview Academia and academic leaders have an incredible responsibility to lead the world in advancing research at the frontiers of our shared knowledge. Diversity is the most important tool for ensuring that every domain expert is advancing intellectual and broader impacts. Here are three similes to describe why diversity first is the most efficient strategy and critical requirement for effective research and education: 1) Reproduction of knowledge benefits from diversity like genetic diversity benefits from sexual reproduction. Diversity is key to the evolution of our species, and we need that evolution to include all intellectual contributions to continue adaptation. 2) Inspiration to build knowledge depends on diversity as much as music is defined by the synthesis of various parts. Without integrating a spectrum of tone, pitch, and rhythm, it\u2019s not music at all \u2013 without diversity, our academic efforts are more likely to be just noise. 3) Innovation in research and education are generated by diversity like a healthy democracy benefits from a respectful dialogue presenting a range of perspectives and contrasting ideas. Innovation does not happen in a homogenous environment limited by the bounds of a common set of ideas. Diversity yields reproduction of knowledge, inspiration, and innovation when the sum of the parts is crafted to coexist harmoniously. The sum of the parts is greater than the whole when the parts remain intact AND something new is created from the collaboration. It is a solemn task and hard work to respectfully synthesize the latest approaches to create learning environments where diverse contributors can thrive. In reality, most academics are products of a meritocracy with toxic hierarchical dependencies that require reframing, emotional intelligence, and a daily commitment to uncovering unconscious bias. Training and cultural awareness on how to integrate diversity and inclusion into our academic work is emerging as a new status quo. I expect the short and long-term outcomes will include both domain science merit and generation of a scientific workforce whom the public taxpayers trust and are committed to support. The chaos of life on our planet has synthesized a dynamic set of problems for scientists and engineers. These problems can be converted to opportunities when we put diversity to work in a scaffold of our collective knowledge. Methods Based on the distribution of the global population, our aim is to create hackweek cohorts and community that includes at least 50% of participants who identify as women, and up to 10% of participants who identify as non-binary or transgender. We also aim to create a cohort that consists of up to 50% people of color, 10% LGBTQ, and 10% of bi- or multi-lingual students. We focus on recruiting and promotions before the event, and inclusive approaches during the event to create an environment where every participant can benefit (including accommodating disabilities) from the community intersectionality of disciplinary and personal diversity. We have three components to our workshop that are new to the hackweek model at UW eScience Institute: 1) A diverse advisory board is currently being recruited from outside the science domain leadership team. This group of advisors have been selected for both professional domain expertise, and also meet the diversity target. 2) Our participant selection process will require invited 50 of the anticipated 300 applicants. Our selection method will include using and advancing the Entrofy software . 3) We are working with an independent Education Evaluator to help us design, develop, and implement an evaluation that with determine the effectiveness of the training for individuals from currently underrepresented populations. Measuring this effectiveness requires thoughtful planning throughout the application design, event promotion, during the event activities, and follow-up to determine long-term community impacts. 4) Student leadership training as Certified Data Carpentry Instructors and cultural awareness to support expert knowledge at all career stages. About Entrofy Open source software on Github, given a list of participants with various \"attributes\" (e.g., gender, career stage, subfield, geography, years since PhD), the code finds the distribution of values within each attribute (e.g, male, female) and generate a subset that approximates target value distributions (e.g, 50% male/female, 30% junior, 30% non-US). The attributes and values are user determined and based on the data present in uploaded CSV file.","title":"Diversity Statement"},{"location":"diversityMethods/#diversity-statement","text":"","title":"Diversity Statement"},{"location":"diversityMethods/#overview","text":"Academia and academic leaders have an incredible responsibility to lead the world in advancing research at the frontiers of our shared knowledge. Diversity is the most important tool for ensuring that every domain expert is advancing intellectual and broader impacts. Here are three similes to describe why diversity first is the most efficient strategy and critical requirement for effective research and education: 1) Reproduction of knowledge benefits from diversity like genetic diversity benefits from sexual reproduction. Diversity is key to the evolution of our species, and we need that evolution to include all intellectual contributions to continue adaptation. 2) Inspiration to build knowledge depends on diversity as much as music is defined by the synthesis of various parts. Without integrating a spectrum of tone, pitch, and rhythm, it\u2019s not music at all \u2013 without diversity, our academic efforts are more likely to be just noise. 3) Innovation in research and education are generated by diversity like a healthy democracy benefits from a respectful dialogue presenting a range of perspectives and contrasting ideas. Innovation does not happen in a homogenous environment limited by the bounds of a common set of ideas. Diversity yields reproduction of knowledge, inspiration, and innovation when the sum of the parts is crafted to coexist harmoniously. The sum of the parts is greater than the whole when the parts remain intact AND something new is created from the collaboration. It is a solemn task and hard work to respectfully synthesize the latest approaches to create learning environments where diverse contributors can thrive. In reality, most academics are products of a meritocracy with toxic hierarchical dependencies that require reframing, emotional intelligence, and a daily commitment to uncovering unconscious bias. Training and cultural awareness on how to integrate diversity and inclusion into our academic work is emerging as a new status quo. I expect the short and long-term outcomes will include both domain science merit and generation of a scientific workforce whom the public taxpayers trust and are committed to support. The chaos of life on our planet has synthesized a dynamic set of problems for scientists and engineers. These problems can be converted to opportunities when we put diversity to work in a scaffold of our collective knowledge.","title":"Overview"},{"location":"diversityMethods/#methods","text":"Based on the distribution of the global population, our aim is to create hackweek cohorts and community that includes at least 50% of participants who identify as women, and up to 10% of participants who identify as non-binary or transgender. We also aim to create a cohort that consists of up to 50% people of color, 10% LGBTQ, and 10% of bi- or multi-lingual students. We focus on recruiting and promotions before the event, and inclusive approaches during the event to create an environment where every participant can benefit (including accommodating disabilities) from the community intersectionality of disciplinary and personal diversity. We have three components to our workshop that are new to the hackweek model at UW eScience Institute: 1) A diverse advisory board is currently being recruited from outside the science domain leadership team. This group of advisors have been selected for both professional domain expertise, and also meet the diversity target. 2) Our participant selection process will require invited 50 of the anticipated 300 applicants. Our selection method will include using and advancing the Entrofy software . 3) We are working with an independent Education Evaluator to help us design, develop, and implement an evaluation that with determine the effectiveness of the training for individuals from currently underrepresented populations. Measuring this effectiveness requires thoughtful planning throughout the application design, event promotion, during the event activities, and follow-up to determine long-term community impacts. 4) Student leadership training as Certified Data Carpentry Instructors and cultural awareness to support expert knowledge at all career stages.","title":"Methods"},{"location":"diversityMethods/#about-entrofy","text":"Open source software on Github, given a list of participants with various \"attributes\" (e.g., gender, career stage, subfield, geography, years since PhD), the code finds the distribution of values within each attribute (e.g, male, female) and generate a subset that approximates target value distributions (e.g, 50% male/female, 30% junior, 30% non-US). The attributes and values are user determined and based on the data present in uploaded CSV file.","title":"About Entrofy"},{"location":"gee_javascript/","text":"Google Earth Engine Access and Javascript Tips Please complete this tutorial before arriving at Waterhackweek. Use the steps below to get registered for a Google Earth Engine (GEE) account and to join our shared repository. How do I get a GEE account? Go the the GEE sign up page and enter > the email you want to use for your GEE account. A gmail is best if you have one. Enter your email, your affiliation and country/region. Where it asks what you want to accomplish, mention you are at Waterhackweek at the University of Washington. Review the terms, verify your non-robot identify and click 'Submit'. Check your email, including your spam folder, for a link from the Google Developer's Team. The confirmation email will have directions on how to access the Code Editor. Not sure if you have access? Use this link to check. If you didn't get access you will get an authorization error that says your account isn't registered. If you do have access, the link will open up the Javascript IDE. This link is your permanent portal to GEE access. What are some JavaScript basics? JavaScript, not to be confused with Java, is a programming language widely used in web development alongside HTML and CSS. You can teach yourself JavaScript using any number of online tutorials, such as those offered by w3schools . At Waterhackweek, we access GEE by entering JavaScript commands into an online integrated development environment (IDE) called the Code Editor. It is not necessary to formally learn JavaScript to work with GEE. Below we provide examples and resources for getting started. Javascript Tips Here are a few basics useful for GEE, reproduced from the Earth Engine 101 Beginner's Curriculum . // Line comments start with two forward slashes. Like this line. /* Multi-line comments start with a forward slash and a star, and end with a star and a forward slash. */ Variables are used to store objects and are defined using the keyword var . var theAnswer = 42; // string objects start and end with a single quote var myVariable = 'I am a string'; // string objects can also use double quotes, but don't mix and match var myOtherVariable = \"I am also a string\"; Statements should end in a semi-colon, or the editor complains. var test = 'I feel incomplete...' var test2 = 'I feel complete!'; Passing function parameters and using lists // Parentheses are used to pass parameters to functions print('This string will print in the Console tab.'); /* Square brackets are used for items in a list. The zero index refers to the first item in a list*/ var myList = ['eggplant','apple','wheat']; print(myList[0]); // would print 'eggplant' Using dictionaries // Curly brackets (or braces) can be used to define dictionaries (key:value pairs). var myDict = {'food':'bread', 'color':'red', 'number':42}; // Square brackets can be used to access dictionary items by key. print(myDict['color']); //Or you can use the dot notation to get the same result. print(myDict.color); Functions can be defined as a way to reuse code and make it easier to read. var myHelloFunction = function(string) { return 'Hello ' + string + '!'; }; print(myHelloFunction('world')); Other JavaScript Resources JavaScript uses camelCase. JavaScript (according to W3 academy) is easy to learn. Like other programming languages, you can use style guides to learn how to write standard, reproducible (marketable!) code. For in-depth industry guidance, Google publishes their own definitive JavaScript style guide . Dana Tomlin has also created a short JavaScript Quick Start Guide which only takes a few minutes to work through but hits some of the basics. You can find it clicking that link or by going to the GEE homepage, clicking on the EDU tab in the upper left, and scrolling down to the Geospatial Software Design Exercises section.","title":"GEE Access and JavaScript Tips"},{"location":"gee_javascript/#google-earth-engine-access-and-javascript-tips","text":"Please complete this tutorial before arriving at Waterhackweek. Use the steps below to get registered for a Google Earth Engine (GEE) account and to join our shared repository.","title":"Google Earth Engine Access and Javascript Tips"},{"location":"gee_javascript/#how-do-i-get-a-gee-account","text":"Go the the GEE sign up page and enter > the email you want to use for your GEE account. A gmail is best if you have one. Enter your email, your affiliation and country/region. Where it asks what you want to accomplish, mention you are at Waterhackweek at the University of Washington. Review the terms, verify your non-robot identify and click 'Submit'. Check your email, including your spam folder, for a link from the Google Developer's Team. The confirmation email will have directions on how to access the Code Editor. Not sure if you have access? Use this link to check. If you didn't get access you will get an authorization error that says your account isn't registered. If you do have access, the link will open up the Javascript IDE. This link is your permanent portal to GEE access.","title":"How do I get a GEE account?"},{"location":"gee_javascript/#what-are-some-javascript-basics","text":"JavaScript, not to be confused with Java, is a programming language widely used in web development alongside HTML and CSS. You can teach yourself JavaScript using any number of online tutorials, such as those offered by w3schools . At Waterhackweek, we access GEE by entering JavaScript commands into an online integrated development environment (IDE) called the Code Editor. It is not necessary to formally learn JavaScript to work with GEE. Below we provide examples and resources for getting started.","title":"What are some JavaScript basics?"},{"location":"gee_javascript/#javascript-tips","text":"Here are a few basics useful for GEE, reproduced from the Earth Engine 101 Beginner's Curriculum . // Line comments start with two forward slashes. Like this line. /* Multi-line comments start with a forward slash and a star, and end with a star and a forward slash. */ Variables are used to store objects and are defined using the keyword var . var theAnswer = 42; // string objects start and end with a single quote var myVariable = 'I am a string'; // string objects can also use double quotes, but don't mix and match var myOtherVariable = \"I am also a string\"; Statements should end in a semi-colon, or the editor complains. var test = 'I feel incomplete...' var test2 = 'I feel complete!'; Passing function parameters and using lists // Parentheses are used to pass parameters to functions print('This string will print in the Console tab.'); /* Square brackets are used for items in a list. The zero index refers to the first item in a list*/ var myList = ['eggplant','apple','wheat']; print(myList[0]); // would print 'eggplant' Using dictionaries // Curly brackets (or braces) can be used to define dictionaries (key:value pairs). var myDict = {'food':'bread', 'color':'red', 'number':42}; // Square brackets can be used to access dictionary items by key. print(myDict['color']); //Or you can use the dot notation to get the same result. print(myDict.color); Functions can be defined as a way to reuse code and make it easier to read. var myHelloFunction = function(string) { return 'Hello ' + string + '!'; }; print(myHelloFunction('world'));","title":"Javascript Tips"},{"location":"gee_javascript/#other-javascript-resources","text":"JavaScript uses camelCase. JavaScript (according to W3 academy) is easy to learn. Like other programming languages, you can use style guides to learn how to write standard, reproducible (marketable!) code. For in-depth industry guidance, Google publishes their own definitive JavaScript style guide . Dana Tomlin has also created a short JavaScript Quick Start Guide which only takes a few minutes to work through but hits some of the basics. You can find it clicking that link or by going to the GEE homepage, clicking on the EDU tab in the upper left, and scrolling down to the Geospatial Software Design Exercises section.","title":"Other JavaScript Resources"},{"location":"github/","text":"GitHub What is Git/GitHub? Git is a popular version control system that is the foundation of most open source software development. You are not required to know Git in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. What if I do not have the git command on my local machine? If you don't have Git installed on you local machine, you can download the latest installer on Git-SCM . More help for the install process can be found in the official Git documentation Why do I need a GitHub account? There are three reasons you are required to have a GitHub account for the hackweek: We use GitHub credentialing to give everyone access to our cloud computing resources All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later! Why are we joining a GitHub Organization? GitHub organizations are a convenient way for teams to get all content relevant to a specific project our workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have ``teams'' that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called Waterhackweek . For security purposes you can only join the organization by invitation. Here are the steps: Once you have a GitHub ID, send it to Owen Freed on our Slack channel We will then find your ID and send you an invitation which should generate an email notification to the email you provided when you signed up for GitHub Follow the links in the email to accept the invitation How should I configure my GitHub account? As you'll learn in the next lesson, we will use the Waterhackweek GitHub organization as a way to manage access to our cloud computing resources. In order for this to work each person must have public, rather than private membership in the Waterhackweek organization. First, navigate to the \"People\" tab on the Waterhackweek GitHub organization: Now, if you see \"Private\" to the right of your account, you will need to switch this to \"Public\": The steps for doing this are also well documented on this GitHub help page. How will GitHub repositories be structured? When you click on the \"Repositories\" tab in the Waterhackweek GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each tutorial. There is a repository for the public-facing website you used to register for this event, and a repository for the wiki page. We'll also create new repositories for each project when we meet in person. How do I learn more? We encourage you to start practicing with Git and GitHub in advance of this event. Our tutorials will follow this lesson. Additional tutorial content from our past hackweeks is here . As always, feel free to post questions on Slack if you run into any difficulties!","title":"GitHub"},{"location":"github/#github","text":"","title":"GitHub"},{"location":"github/#what-is-gitgithub","text":"Git is a popular version control system that is the foundation of most open source software development. You are not required to know Git in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment.","title":"What is Git/GitHub?"},{"location":"github/#what-if-i-do-not-have-the-git-command-on-my-local-machine","text":"If you don't have Git installed on you local machine, you can download the latest installer on Git-SCM . More help for the install process can be found in the official Git documentation","title":"What if I do not have the git command on my local machine?"},{"location":"github/#why-do-i-need-a-github-account","text":"There are three reasons you are required to have a GitHub account for the hackweek: We use GitHub credentialing to give everyone access to our cloud computing resources All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later!","title":"Why do I need a GitHub account?"},{"location":"github/#why-are-we-joining-a-github-organization","text":"GitHub organizations are a convenient way for teams to get all content relevant to a specific project our workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have ``teams'' that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called Waterhackweek . For security purposes you can only join the organization by invitation. Here are the steps: Once you have a GitHub ID, send it to Owen Freed on our Slack channel We will then find your ID and send you an invitation which should generate an email notification to the email you provided when you signed up for GitHub Follow the links in the email to accept the invitation","title":"Why are we joining a GitHub Organization?"},{"location":"github/#how-should-i-configure-my-github-account","text":"As you'll learn in the next lesson, we will use the Waterhackweek GitHub organization as a way to manage access to our cloud computing resources. In order for this to work each person must have public, rather than private membership in the Waterhackweek organization. First, navigate to the \"People\" tab on the Waterhackweek GitHub organization: Now, if you see \"Private\" to the right of your account, you will need to switch this to \"Public\": The steps for doing this are also well documented on this GitHub help page.","title":"How should I configure my GitHub account?"},{"location":"github/#how-will-github-repositories-be-structured","text":"When you click on the \"Repositories\" tab in the Waterhackweek GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each tutorial. There is a repository for the public-facing website you used to register for this event, and a repository for the wiki page. We'll also create new repositories for each project when we meet in person.","title":"How will GitHub repositories be structured?"},{"location":"github/#how-do-i-learn-more","text":"We encourage you to start practicing with Git and GitHub in advance of this event. Our tutorials will follow this lesson. Additional tutorial content from our past hackweeks is here . As always, feel free to post questions on Slack if you run into any difficulties!","title":"How do I learn more?"},{"location":"howtocontribute/","text":"How to Contribute Contribute lessons or content Refer the Vocabulary and Acronyms lesson on the sidebar. This document lists some of the terms encountered during the Cyberseminar series. Enrich this vocabulary by contributing to it so that it is up to date and useful for you!!! Add more terms to this document by raising a pull request for the corresponding github project. Steps: Navigate to the learning-resources Github project Click on Fork button, present at the right side top. This will create an exact copy of the repository under your Github username Navigate to the forked repository in your profile. It should look something like your-github-username/learning-resources Modify the docs/VocabAcronyms2020.md file by adding your favourite terms to it! On the home page of the forked repository, click on the \"New Pull Request\" button, this would lead to a page showing changes in your forked repository (your-github-username/learning-resources) and waterhackweek/learning-resources. Review the changes Click on the 'Create Pull Request' button This would redirect you to a template, where you need to describe the changes in your Pull request. Mention the title and description of the change and click on 'Create Pull Request' button. Post this, you just have to wait and watch! If your pull request gets approved, then Congratulations! you made a contribution to open source :D We are extending an open invitation to anyone to join the COVID-19 Community Project experimenting with GeoHealth project integration to contribute and visualize data to Flatten the Curve March 23 - April 16. More information on this will be available soon.","title":"How to Contribute"},{"location":"howtocontribute/#how-to-contribute","text":"","title":"How to Contribute"},{"location":"howtocontribute/#contribute-lessons-or-content","text":"Refer the Vocabulary and Acronyms lesson on the sidebar. This document lists some of the terms encountered during the Cyberseminar series. Enrich this vocabulary by contributing to it so that it is up to date and useful for you!!! Add more terms to this document by raising a pull request for the corresponding github project. Steps: Navigate to the learning-resources Github project Click on Fork button, present at the right side top. This will create an exact copy of the repository under your Github username Navigate to the forked repository in your profile. It should look something like your-github-username/learning-resources Modify the docs/VocabAcronyms2020.md file by adding your favourite terms to it! On the home page of the forked repository, click on the \"New Pull Request\" button, this would lead to a page showing changes in your forked repository (your-github-username/learning-resources) and waterhackweek/learning-resources. Review the changes Click on the 'Create Pull Request' button This would redirect you to a template, where you need to describe the changes in your Pull request. Mention the title and description of the change and click on 'Create Pull Request' button. Post this, you just have to wait and watch! If your pull request gets approved, then Congratulations! you made a contribution to open source :D We are extending an open invitation to anyone to join the COVID-19 Community Project experimenting with GeoHealth project integration to contribute and visualize data to Flatten the Curve March 23 - April 16. More information on this will be available soon.","title":"Contribute lessons or content"},{"location":"hydrolearn/","text":"Intro to HydroLearn This lesson provides an introduction to building educational curriculum with Jupyter Notebooks on HydroLean. Learning Objectives Understand Educational Design for Water Research that includes scientific computing Understand how to create high-quality Notebooks and visualizations using Waterhackweek Learning Resources Reading Assignment (optional) (15 minutes) Background needed here on Educational Design... To do. Link to Belize Lane YouTube video Sign up for HydroLearn. Example: If you are a beginner Python programmer making the transition from Matlab, read this article . Practical Assignment (30 minutes) Examples Work through this notebook: Introduction to Numpy . The notebook will open in Google Colab in Playground mode (this mode opens a copy of the read-only notebook in a temporary session, that doesn't save the notebook). Make sure you create a copy of the notebook by clicking on \"Copy to Drive\", and then start working with the notebook.","title":"Intro to HydroLearn"},{"location":"hydrolearn/#intro-to-hydrolearn","text":"This lesson provides an introduction to building educational curriculum with Jupyter Notebooks on HydroLean.","title":"Intro to HydroLearn"},{"location":"hydrolearn/#learning-objectives","text":"Understand Educational Design for Water Research that includes scientific computing Understand how to create high-quality Notebooks and visualizations using Waterhackweek Learning Resources","title":"Learning Objectives"},{"location":"hydrolearn/#reading-assignment-optional-15-minutes","text":"Background needed here on Educational Design... To do. Link to Belize Lane YouTube video Sign up for HydroLearn. Example: If you are a beginner Python programmer making the transition from Matlab, read this article .","title":"Reading Assignment (optional) (15 minutes)"},{"location":"hydrolearn/#practical-assignment-30-minutes","text":"Examples Work through this notebook: Introduction to Numpy . The notebook will open in Google Colab in Playground mode (this mode opens a copy of the read-only notebook in a temporary session, that doesn't save the notebook). Make sure you create a copy of the notebook by clicking on \"Copy to Drive\", and then start working with the notebook.","title":"Practical Assignment (30 minutes)"},{"location":"hydroshare_landlab_binder/","text":"Software Instructions to Access an Interactive Notebook This resource provides a Landlab Developer Software Environment that is enables data transfer from a HydroShare Resource using the Binder platform. Instructions for Quick Access, Updating Data and Updating Code Quick access to run code online To open interactive Jupyter Notebooks with Binder JupyterHub server. You will be connected to a virtual machine with the software environment required to execute the models. When your personal compute workspace is finished building (thank you Binder), you will see a file directory (thank you JupyterHub). Click on the Amazing_Landlab_ModelInstance.ipynb Notebook (thank you Landlab). This notebook is also viewable but not interactive in it's development location (thank you Github). Online Modeling Instructions To open interactive Jupyter Notebooks with the CUAHSI JupyterHub server, go to the upper right corner of the resource page and click on 'Open With'. Select CUAHSI JupyterHub. You will be connected to a virtual machine with the software environment required to execute the models. Notebook 1: Learn about Landlab functions with a synthetic grid and recharge forcings Notebook 2: Learn about Version 2 Landslide Component comparing depth to water table and recharge forcings on a synthetic grid Notebook 3: Replicate an experiment on a watershed subset within regional Landlab landslide model to explore fire impacts. The resource was originally derived from a reproducible demonstration of the landslide modeling results from: Strauch, R., Istanbulluoglu, E., Nudurupati, S. S., Bandaragoda, C., Gasparini, N. M., and Tucker, G. E.: (2018) A hydro-climatological approach to predicting regional landslide probability using Landlab, Earth Surf. Dynam. Discuss., https://doi.org/10.5194/esurf-6-49-2018: Replicate_landslide_model_for_fire.ipynb Create a Software Environment for a Github Repository - Personal Computer Installation Instructions Packages The notebooks included in this resource require the following Python 3 packages: hs_restclient==1.3.5 landlab==1.10.0 To ensure that you have the correct packages and versions, run the following command(s) inside a Python terminal: $ conda list or $ pip list Creating a Landlab Working Environment on Binder from HydroShare We recommend using Anaconda to create a fresh Python environment with all dependencies installed. After installing Anaconda, simply run the commands below with your desired environment name in place of MY_ENVIRONMENT_NAME : Landlab Installation of latest release: See Installing Landlab Landlab Installation of your development branch: See Installing Landlab for Development conda create -n MY_ENVIRONMENT_NAME --file requirements.txt activate the environment and start a jupyter server source activate MY_ENVIRONMENT_NAME jupyter notebook Debugging a Working Environment Are you getting errors? Here are some suggested steps. If you still have issues, email help@cuahsi.org or reach out to us (comment on this resource or see emails in HydroShare profiles) and we will invite you to the HydroShare Slack #landlab channel. Bug: PackagesNotFound PackagesNotFoundError: The following packages are not available from current channels. Reduce the number of packages that were not available by running the following command conda config --append channels conda-forge Bug: Conda vs.Pip Install If you get errors for a few packages, remove them from the requirements.txt file until you successfully created the conda environment. conda create -n MY_ENVIRONMENT_NAME --file requirements.txt Any packages that didn't get installed during creation of conda environment can be pip installed separately in the newly created conda environment. for example: pip install hs-restclient==1.3.5 Reproducible Quote of the Day: \"The product of mental labor - science - always stands far below its value, because the labor-time necessary to reproduce it has no relation at all to the labor-time required for its original production.\" Karl Marx","title":"Software Instructions to Access an Interactive Notebook"},{"location":"hydroshare_landlab_binder/#software-instructions-to-access-an-interactive-notebook","text":"","title":"Software Instructions to Access an Interactive Notebook"},{"location":"hydroshare_landlab_binder/#this-resource-provides-a-landlab-developer-software-environment-that-is-enables-data-transfer-from-a-hydroshare-resource-using-the-binder-platform","text":"","title":"This resource provides a Landlab Developer Software Environment that is enables data transfer from a HydroShare Resource using the Binder platform."},{"location":"hydroshare_landlab_binder/#instructions-for-quick-access-updating-data-and-updating-code","text":"","title":"Instructions for Quick Access, Updating Data and Updating Code"},{"location":"hydroshare_landlab_binder/#quick-access-to-run-code-online","text":"To open interactive Jupyter Notebooks with Binder JupyterHub server. You will be connected to a virtual machine with the software environment required to execute the models. When your personal compute workspace is finished building (thank you Binder), you will see a file directory (thank you JupyterHub). Click on the Amazing_Landlab_ModelInstance.ipynb Notebook (thank you Landlab). This notebook is also viewable but not interactive in it's development location (thank you Github).","title":"Quick access to run code online"},{"location":"hydroshare_landlab_binder/#online-modeling-instructions","text":"To open interactive Jupyter Notebooks with the CUAHSI JupyterHub server, go to the upper right corner of the resource page and click on 'Open With'. Select CUAHSI JupyterHub. You will be connected to a virtual machine with the software environment required to execute the models. Notebook 1: Learn about Landlab functions with a synthetic grid and recharge forcings Notebook 2: Learn about Version 2 Landslide Component comparing depth to water table and recharge forcings on a synthetic grid Notebook 3: Replicate an experiment on a watershed subset within regional Landlab landslide model to explore fire impacts. The resource was originally derived from a reproducible demonstration of the landslide modeling results from: Strauch, R., Istanbulluoglu, E., Nudurupati, S. S., Bandaragoda, C., Gasparini, N. M., and Tucker, G. E.: (2018) A hydro-climatological approach to predicting regional landslide probability using Landlab, Earth Surf. Dynam. Discuss., https://doi.org/10.5194/esurf-6-49-2018: Replicate_landslide_model_for_fire.ipynb","title":"Online Modeling Instructions"},{"location":"hydroshare_landlab_binder/#create-a-software-environment-for-a-github-repository-personal-computer-installation-instructions","text":"","title":"Create a Software Environment for a Github Repository - Personal Computer Installation Instructions"},{"location":"hydroshare_landlab_binder/#packages","text":"The notebooks included in this resource require the following Python 3 packages: hs_restclient==1.3.5 landlab==1.10.0 To ensure that you have the correct packages and versions, run the following command(s) inside a Python terminal: $ conda list or $ pip list","title":"Packages"},{"location":"hydroshare_landlab_binder/#creating-a-landlab-working-environment-on-binder-from-hydroshare","text":"We recommend using Anaconda to create a fresh Python environment with all dependencies installed. After installing Anaconda, simply run the commands below with your desired environment name in place of MY_ENVIRONMENT_NAME : Landlab Installation of latest release: See Installing Landlab Landlab Installation of your development branch: See Installing Landlab for Development conda create -n MY_ENVIRONMENT_NAME --file requirements.txt activate the environment and start a jupyter server source activate MY_ENVIRONMENT_NAME jupyter notebook","title":"Creating a Landlab Working Environment on Binder from HydroShare"},{"location":"hydroshare_landlab_binder/#debugging-a-working-environment","text":"Are you getting errors? Here are some suggested steps. If you still have issues, email help@cuahsi.org or reach out to us (comment on this resource or see emails in HydroShare profiles) and we will invite you to the HydroShare Slack #landlab channel. Bug: PackagesNotFound PackagesNotFoundError: The following packages are not available from current channels. Reduce the number of packages that were not available by running the following command conda config --append channels conda-forge Bug: Conda vs.Pip Install If you get errors for a few packages, remove them from the requirements.txt file until you successfully created the conda environment. conda create -n MY_ENVIRONMENT_NAME --file requirements.txt Any packages that didn't get installed during creation of conda environment can be pip installed separately in the newly created conda environment. for example: pip install hs-restclient==1.3.5","title":"Debugging a Working Environment"},{"location":"hydroshare_landlab_binder/#reproducible-quote-of-the-day","text":"\"The product of mental labor - science - always stands far below its value, because the labor-time necessary to reproduce it has no relation at all to the labor-time required for its original production.\" Karl Marx","title":"Reproducible Quote of the Day:"},{"location":"ngss/","text":"Next Generation Science Standards Crosscutting Concepts Connections to Engineering,Technology and Applications of Science MS.Structure, Function, and Information Processing Interdependence of Science, Engineering, and Technology MS-LS1-1. Conduct an investigation to provide evidence MS-LS1-2. Develop and use a model to describe a function or process MS-LS1-3. Use argument supported by evidence MS-LS1-8. Gather and synthesize information ?? How does this connect to computer systems and groups of human systems ?? Engineering advances have led to important discoveries in virtually every field of science, and scientific discoveries have led to the development of entire industries and engineered systems. (MS-LS1-1) Use argument supported by evidence for how the body is a system of interacting subsystems composed of groups of cells. [Clarification Statement: Emphasis is on the conceptual understanding that cells form tissues and tissues form organs specialized for particular body functions. Examples could include the interaction of subsystems within a system and the normal functioning of those systems.] [Assessment Boundary: Assessment does not include the mechanism of one body system independent of others. Assessment is limited to the circulatory, excretory, digestive, respiratory, muscular, and nervous systems.]","title":"Ngss"},{"location":"ngss/#next-generation-science-standards","text":"","title":"Next Generation Science Standards"},{"location":"ngss/#crosscutting-concepts","text":"","title":"Crosscutting Concepts"},{"location":"ngss/#connections-to-engineeringtechnology-and-applications-of-science","text":"MS.Structure, Function, and Information Processing Interdependence of Science, Engineering, and Technology MS-LS1-1. Conduct an investigation to provide evidence MS-LS1-2. Develop and use a model to describe a function or process MS-LS1-3. Use argument supported by evidence MS-LS1-8. Gather and synthesize information ?? How does this connect to computer systems and groups of human systems ?? Engineering advances have led to important discoveries in virtually every field of science, and scientific discoveries have led to the development of entire industries and engineered systems. (MS-LS1-1) Use argument supported by evidence for how the body is a system of interacting subsystems composed of groups of cells. [Clarification Statement: Emphasis is on the conceptual understanding that cells form tissues and tissues form organs specialized for particular body functions. Examples could include the interaction of subsystems within a system and the normal functioning of those systems.] [Assessment Boundary: Assessment does not include the mechanism of one body system independent of others. Assessment is limited to the circulatory, excretory, digestive, respiratory, muscular, and nervous systems.]","title":"Connections to Engineering,Technology and Applications of Science"},{"location":"numpy/","text":"Intro to Numpy This lesson provides an introduction to numpy and matplotlib. Learning Objectives Understand Numpy for scientific computing Understand how to create high-quality visualizations using Matplotlib Reading Assignment (optional) (15 minutes) If you are a beginner Python programmer making the transition from Matlab, read this article . Practical Assignment (30 minutes) Work through this notebook: Introduction to Numpy . The notebook will open in Google Colab in Playground mode (this mode opens a copy of the read-only notebook in a temporary session, that doesn't save the notebook). Make sure you create a copy of the notebook by clicking on \"Copy to Drive\", and then start working with the notebook.","title":"Numpy"},{"location":"numpy/#intro-to-numpy","text":"This lesson provides an introduction to numpy and matplotlib.","title":"Intro to Numpy"},{"location":"numpy/#learning-objectives","text":"Understand Numpy for scientific computing Understand how to create high-quality visualizations using Matplotlib","title":"Learning Objectives"},{"location":"numpy/#reading-assignment-optional-15-minutes","text":"If you are a beginner Python programmer making the transition from Matlab, read this article .","title":"Reading Assignment (optional) (15 minutes)"},{"location":"numpy/#practical-assignment-30-minutes","text":"Work through this notebook: Introduction to Numpy . The notebook will open in Google Colab in Playground mode (this mode opens a copy of the read-only notebook in a temporary session, that doesn't save the notebook). Make sure you create a copy of the notebook by clicking on \"Copy to Drive\", and then start working with the notebook.","title":"Practical Assignment (30 minutes)"},{"location":"pandas/","text":"Intro to Pandas This lesson provides an introduction to pandas. Learning Objectives Understand concepts Understand data access strategies, data types, Python ecosystem Practical Assignment (30 minutes) Work through this notebook : Introduction to Pandas . The notebook will open in Google Colab in Playground mode (this mode opens a copy of the read-only notebook in a temporary session, that doesn't save the notebook). Make sure you create a copy of the notebook by clicking on \"Copy to Drive\", and then start working with the notebook. Optional Links Refer this article on the essentials of Pandas, addressing the problem of redundancy and the highlights to retain. Combine your Git and pandas skills! Fork this repository and start coding!","title":"Pandas"},{"location":"pandas/#intro-to-pandas","text":"This lesson provides an introduction to pandas.","title":"Intro to Pandas"},{"location":"pandas/#learning-objectives","text":"Understand concepts Understand data access strategies, data types, Python ecosystem","title":"Learning Objectives"},{"location":"pandas/#practical-assignment-30-minutes","text":"Work through this notebook : Introduction to Pandas . The notebook will open in Google Colab in Playground mode (this mode opens a copy of the read-only notebook in a temporary session, that doesn't save the notebook). Make sure you create a copy of the notebook by clicking on \"Copy to Drive\", and then start working with the notebook.","title":"Practical Assignment (30 minutes)"},{"location":"pandas/#optional-links","text":"Refer this article on the essentials of Pandas, addressing the problem of redundancy and the highlights to retain. Combine your Git and pandas skills! Fork this repository and start coding!","title":"Optional Links"},{"location":"project/","text":"Project Roles and Responsibilities Project Lead The project scientist will lead a Waterhackweek project . In this role, the project scientist will: pitch project and interact with all interested participants during networking. coordinate team building with other instructors to an optimal size of 4-7 total participants per team. populate original GIthub project repository and readme following the Project Guidelines . coordinate with 1-2 Data Scientists to support the team, especially for the development of Github workflows that work for everyone to be able to contribute code. oversee data management; be sure you have permission and consent to use data you share in the project and follow professional standards while using data for training that may be used in future publications. Here is a good resource on publication of data and consent ethics. facilitate team work. coordinate team activities and code to answer the reserch question; data, code, and tools originally proposed may change. make sure that everyone partcipates in the project. support each individual on your team to meeting their individual goals. Data Scientist The data scientist lead: will be responsible for supporting at least one project , and expected to float around as needed. will advise teams regarding applying best data science practices and methodologies. will help coordinate a Github workflow that works best by facilitating team conversations. enable and encourage participants to solve their problems in a way that builds confidence in their skills. For example, look for how people improve from their baseline level over the week and point those improvements out to them. any group or individual can ask any data scientist for help. interact with as many people as possible. be in tune with progress toward individual goals (discrete daily personal brief checking).","title":"Roles and Responsibilities"},{"location":"project/#project-roles-and-responsibilities","text":"","title":"Project Roles and Responsibilities"},{"location":"project/#project-lead","text":"The project scientist will lead a Waterhackweek project . In this role, the project scientist will: pitch project and interact with all interested participants during networking. coordinate team building with other instructors to an optimal size of 4-7 total participants per team. populate original GIthub project repository and readme following the Project Guidelines . coordinate with 1-2 Data Scientists to support the team, especially for the development of Github workflows that work for everyone to be able to contribute code. oversee data management; be sure you have permission and consent to use data you share in the project and follow professional standards while using data for training that may be used in future publications. Here is a good resource on publication of data and consent ethics. facilitate team work. coordinate team activities and code to answer the reserch question; data, code, and tools originally proposed may change. make sure that everyone partcipates in the project. support each individual on your team to meeting their individual goals.","title":"Project Lead"},{"location":"project/#data-scientist","text":"The data scientist lead: will be responsible for supporting at least one project , and expected to float around as needed. will advise teams regarding applying best data science practices and methodologies. will help coordinate a Github workflow that works best by facilitating team conversations. enable and encourage participants to solve their problems in a way that builds confidence in their skills. For example, look for how people improve from their baseline level over the week and point those improvements out to them. any group or individual can ask any data scientist for help. interact with as many people as possible. be in tune with progress toward individual goals (discrete daily personal brief checking).","title":"Data Scientist"},{"location":"reproducibility101/","text":"Work in progress: this is a module/recipe of open source software practices for authors of reproducible science publishing interactive code and educational materials. Software Instructions: Online and Personal Computer INTERACTIVE! You won't regret clicking on this badge. To open interactive Jupyter Notebooks with Binder JupyterHub server. You will be connected to a virtual machine with the software environment required to execute the models. Online Modeling Instructions To open interactive Jupyter Notebooks with the CUAHSI JupyterHub server, go to the upper right corner of the resource page and click on 'Open With'. Select CUAHSI JupyterHub. You will be connected to a virtual machine with the software environment required to execute the models. Notebook 1: Learn about Observatory functions applied to Skookum Creek in the Nooksack Watershed. OGH_skookum_hybrid_2020417.ipynb Personal Computer Installation Instructions Packages The notebooks included in this resource require the following Python 3 packages: geopandas==0.5.0 dask==1.2.0 hs_restclient==1.3.5 hstools==0.0.1 descartes==1.1.0 landlab==1.10.0 To ensure that you have the correct packages and versions, run the following command(s) inside a Python terminal: $ conda list or $ pip list Creating a Working Environment We recommend using Anaconda to create a fresh Python environment with all dependencies installed. After installing Anaconda, simply run the commands below with your desired environment name in place of MY_ENVIRONMENT_NAME : conda create -n MY_ENVIRONMENT_NAME --file requirements.txt activate the environment and start a jupyter server source activate MY_ENVIRONMENT_NAME jupyter notebook Debugging a Working Environment Are you getting errors? Here are some suggested steps. If you still have issues, email help@cuahsi.org or reach out to us (comment on this resource or see emails in HydroShare profiles) and we will invite you to the HydroShare Slack #landlab channel. Bug: PackagesNotFound PackagesNotFoundError: The following packages are not available from current channels. Reduce the number of packages that were not available by running the following command conda config --append channels conda-forge Bug: Conda vs.Pip Install If you get errors for a few packages, remove them from the requirements.txt file until you successfully created the conda environment. conda create -n MY_ENVIRONMENT_NAME --file requirements.txt Any packages that didn't get installed during creation of conda environment can be pip installed separately in the newly created conda environment. for example: pip install hs-restclient==1.3.5 Reproducible Quote of the Day: \"The product of mental labor - science - always stands far below its value, because the labor-time necessary to reproduce it has no relation at all to the labor-time required for its original production.\" Karl Marx","title":"Scientific Methods"},{"location":"reproducibility101/#software-instructions-online-and-personal-computer","text":"INTERACTIVE! You won't regret clicking on this badge. To open interactive Jupyter Notebooks with Binder JupyterHub server. You will be connected to a virtual machine with the software environment required to execute the models.","title":"Software Instructions: Online and Personal Computer"},{"location":"reproducibility101/#online-modeling-instructions","text":"To open interactive Jupyter Notebooks with the CUAHSI JupyterHub server, go to the upper right corner of the resource page and click on 'Open With'. Select CUAHSI JupyterHub. You will be connected to a virtual machine with the software environment required to execute the models. Notebook 1: Learn about Observatory functions applied to Skookum Creek in the Nooksack Watershed. OGH_skookum_hybrid_2020417.ipynb","title":"Online Modeling Instructions"},{"location":"reproducibility101/#personal-computer-installation-instructions","text":"","title":"Personal Computer Installation Instructions"},{"location":"reproducibility101/#packages","text":"The notebooks included in this resource require the following Python 3 packages: geopandas==0.5.0 dask==1.2.0 hs_restclient==1.3.5 hstools==0.0.1 descartes==1.1.0 landlab==1.10.0 To ensure that you have the correct packages and versions, run the following command(s) inside a Python terminal: $ conda list or $ pip list","title":"Packages"},{"location":"reproducibility101/#creating-a-working-environment","text":"We recommend using Anaconda to create a fresh Python environment with all dependencies installed. After installing Anaconda, simply run the commands below with your desired environment name in place of MY_ENVIRONMENT_NAME : conda create -n MY_ENVIRONMENT_NAME --file requirements.txt activate the environment and start a jupyter server source activate MY_ENVIRONMENT_NAME jupyter notebook","title":"Creating a Working Environment"},{"location":"reproducibility101/#debugging-a-working-environment","text":"Are you getting errors? Here are some suggested steps. If you still have issues, email help@cuahsi.org or reach out to us (comment on this resource or see emails in HydroShare profiles) and we will invite you to the HydroShare Slack #landlab channel. Bug: PackagesNotFound PackagesNotFoundError: The following packages are not available from current channels. Reduce the number of packages that were not available by running the following command conda config --append channels conda-forge Bug: Conda vs.Pip Install If you get errors for a few packages, remove them from the requirements.txt file until you successfully created the conda environment. conda create -n MY_ENVIRONMENT_NAME --file requirements.txt Any packages that didn't get installed during creation of conda environment can be pip installed separately in the newly created conda environment. for example: pip install hs-restclient==1.3.5","title":"Debugging a Working Environment"},{"location":"reproducibility101/#reproducible-quote-of-the-day","text":"\"The product of mental labor - science - always stands far below its value, because the labor-time necessary to reproduce it has no relation at all to the labor-time required for its original production.\" Karl Marx","title":"Reproducible Quote of the Day:"},{"location":"logistics/getting_help/","text":"Getting Help We know how overwhelming all of this information can be. Here is some for asking questions and figuring out where to turn for help. You can ask anything on the Slack #general channel, any time. Organizers and helpers are monitoring this channel, and some of your fellow hackweek participants may be able to help you! Also, feel free to send a direct message on Slack to any of the organizers or helpers. Helpdesks Apart from the helpdesk Slack channels listed below, you are also welcome to direct message the helpers if you don't feel comfortable asking questions publicly. Git helpdesk : Filipe Fernandes, Wu-Jung Lee, Kavin Nguyen Data Access in R : Ben Tupper, Kavin Nguyen Data Access in Python : Filipe Fernandes, Alex Kearney, Chelle Gentemann, Emilio Mayorga, Wu-Jung Lee Visualization in R : Camille Ross, Kavin Nguyen Visualization in Python : Filipe Fernandes, Kavin Nguyen, Sophie Clayton Machine Learning : Valentina Staneva, Nick Record, Wu-Jung Lee During tutorials Ask questions on Slack! Use the #tutorials channel to ask questions or check out answers to questions others have posed. We will use this same channel every day. Several of us will be monitoring this channel and addressing your questions throughout the tutorials Vote up questions from others to help the moderators prioritize which questions to ask the speaker during tutorials. Tutorial moderators will mark questions that are best answered by the instructor and ask helpers (and anyone else!) to answer the rest in real time. Then when the instructor ask if there are questions the moderators will read those reserved for the instructor. Zoom Chat will not be available. Ask on Slack! You will be muted at the start of the tutorial presentation. The moderator will review questions on Slack and Slido, and ask the questions to the instructor during Q&A time. Projects See the Projects Getting Started page . Reporting a Code of Conduct violation Harassment and other Code of Conduct violations reduce the value of OceanHackWeek for everyone. If someone makes you or anyone else feel unsafe or unwelcome, please report it as soon as possible to one of the instructors. You can make a report either personally or anonymously. Anonymous reports can be made here .","title":"Getting Help"},{"location":"logistics/getting_help/#getting-help","text":"We know how overwhelming all of this information can be. Here is some for asking questions and figuring out where to turn for help. You can ask anything on the Slack #general channel, any time. Organizers and helpers are monitoring this channel, and some of your fellow hackweek participants may be able to help you! Also, feel free to send a direct message on Slack to any of the organizers or helpers.","title":"Getting Help"},{"location":"logistics/getting_help/#helpdesks","text":"Apart from the helpdesk Slack channels listed below, you are also welcome to direct message the helpers if you don't feel comfortable asking questions publicly. Git helpdesk : Filipe Fernandes, Wu-Jung Lee, Kavin Nguyen Data Access in R : Ben Tupper, Kavin Nguyen Data Access in Python : Filipe Fernandes, Alex Kearney, Chelle Gentemann, Emilio Mayorga, Wu-Jung Lee Visualization in R : Camille Ross, Kavin Nguyen Visualization in Python : Filipe Fernandes, Kavin Nguyen, Sophie Clayton Machine Learning : Valentina Staneva, Nick Record, Wu-Jung Lee","title":"Helpdesks"},{"location":"logistics/getting_help/#during-tutorials","text":"Ask questions on Slack! Use the #tutorials channel to ask questions or check out answers to questions others have posed. We will use this same channel every day. Several of us will be monitoring this channel and addressing your questions throughout the tutorials Vote up questions from others to help the moderators prioritize which questions to ask the speaker during tutorials. Tutorial moderators will mark questions that are best answered by the instructor and ask helpers (and anyone else!) to answer the rest in real time. Then when the instructor ask if there are questions the moderators will read those reserved for the instructor. Zoom Chat will not be available. Ask on Slack! You will be muted at the start of the tutorial presentation. The moderator will review questions on Slack and Slido, and ask the questions to the instructor during Q&A time.","title":"During tutorials"},{"location":"logistics/getting_help/#projects","text":"See the Projects Getting Started page .","title":"Projects"},{"location":"logistics/getting_help/#reporting-a-code-of-conduct-violation","text":"Harassment and other Code of Conduct violations reduce the value of OceanHackWeek for everyone. If someone makes you or anyone else feel unsafe or unwelcome, please report it as soon as possible to one of the instructors. You can make a report either personally or anonymously. Anonymous reports can be made here .","title":"Reporting a Code of Conduct violation"},{"location":"logistics/overview/","text":"Overview of Logistics QiqoChat Waterhackweek will rely on QiqoChat as our virtual platform for the week. QiqoChat is a wrapper for Zoom (and other applications) that allows us to create detailed calendar events and manage video breakout rooms. Get started on the Waterhackweek QiqoChat by going to https://waterhack.qiqochat.com and creating your profile! Make sure to add a profile picture! Add your skills: Red for skills you want to learn, yellow for skills you have, and green for skills you can teach. Check out the Member directory to visualize our cohort and our skillsets. Within the main Waterhack QiqoChat \"circle\", we can collaborate and meet online year-round through different events. Check out the events page, https://waterhack.qiqochat.com/events . You can easily convert your calendar events to your time zone on this page. Waterhackweek 2020 activities will take place within the Waterhackweek 2020 event. Time, Schedule Waterhackweek 2020 will take place online daily, during the period 8am-4pm PDT / 11am-7pm EDT / 15:00-23:00 UTC August 31 - September 4. The detailed schedule can be found here ; this schedule is hosted on the Sched system. Communicating via Slack chat We will use the Waterhackweek Slack workspace as the main channel of chat communication during the hackweek, in addition to communication via QiqoChat. You should have received an invitation to join this workspace. If you haven't seen it in your inbox, check your spam folder, or email us at waterhackweek@uw.edu . JupyterHub and GitHub Waterhackweek JupyterHub: https://jupyterhub.cuahsi.org Waterhackweek GitHub organization: https://github.com/waterhackweek Hack projects See the Projects page for more information about projects.","title":"Overview and Schedule"},{"location":"logistics/overview/#overview-of-logistics","text":"","title":"Overview of Logistics"},{"location":"logistics/overview/#qiqochat","text":"Waterhackweek will rely on QiqoChat as our virtual platform for the week. QiqoChat is a wrapper for Zoom (and other applications) that allows us to create detailed calendar events and manage video breakout rooms. Get started on the Waterhackweek QiqoChat by going to https://waterhack.qiqochat.com and creating your profile! Make sure to add a profile picture! Add your skills: Red for skills you want to learn, yellow for skills you have, and green for skills you can teach. Check out the Member directory to visualize our cohort and our skillsets. Within the main Waterhack QiqoChat \"circle\", we can collaborate and meet online year-round through different events. Check out the events page, https://waterhack.qiqochat.com/events . You can easily convert your calendar events to your time zone on this page. Waterhackweek 2020 activities will take place within the Waterhackweek 2020 event.","title":"QiqoChat"},{"location":"logistics/overview/#time-schedule","text":"Waterhackweek 2020 will take place online daily, during the period 8am-4pm PDT / 11am-7pm EDT / 15:00-23:00 UTC August 31 - September 4. The detailed schedule can be found here ; this schedule is hosted on the Sched system.","title":"Time, Schedule"},{"location":"logistics/overview/#communicating-via-slack-chat","text":"We will use the Waterhackweek Slack workspace as the main channel of chat communication during the hackweek, in addition to communication via QiqoChat. You should have received an invitation to join this workspace. If you haven't seen it in your inbox, check your spam folder, or email us at waterhackweek@uw.edu .","title":"Communicating via Slack chat"},{"location":"logistics/overview/#jupyterhub-and-github","text":"Waterhackweek JupyterHub: https://jupyterhub.cuahsi.org Waterhackweek GitHub organization: https://github.com/waterhackweek","title":"JupyterHub and GitHub"},{"location":"logistics/overview/#hack-projects","text":"See the Projects page for more information about projects.","title":"Hack projects"},{"location":"prep/git/","text":"Git Setup and Basics About Git and GitHub Git is a popular version control system that is the foundation of most open source software development. You are not required to be a Git pro in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. We will use Git and GitHub for collaborative work. Be sure to arrive at Waterhackweek with your own GitHub account. Git Installation Windows Install Git for Windows from this link . For more setup details follow these instructions Mac OS Download the git installer and run it. Linux (Debian): sudo apt install git-all To test open the terminal (on Windows, Git Bash) and setup your username and email: git config --global user.name \"your username\" git config --global user.email \"your email\" Getting started with Bash terminal During the hackweek it will be useful to know how to navigate between files from the command line. If you are not familiar with the linux shell commands, you can review the first three sections of this Software Carpentry Shell Novice lesson. On Windows, use the Git Bash terminal to run these commands. Terminal (command line) text editor When working on the command line (the terminal or shell), it is often handy to modify file content directly from there. For that you can use a command line editor such as nano . On Mac and Linux it is usually pre-installed, but for Windows you can follow the instructions in this link to set it up. Test your installation by opening a terminal and running nano --version . If it works you can link your git configuration with nano : git config --global core.editor \"nano -w\" Git steps and workflows Centralized vs Fork-Clone workflows Steps 1-5 focus on the Git \"centralized workflow\". We present it here as an illustration, but the workflow we recommend for use in Waterhackweek is the Git Fork - Clone workflow, discussed in Step 6. 1. Create a project repository On your own or someone in your project group (preferably one who has never done it before), create a repository for the project under the Waterhackweek organization, https://github.com/waterhackweek Click New and follow the steps: check yes to create a README.md file. Format project name as whw20-proj-myprojectname (you can change the name later), where myprojectname is a brief name for your project Invite others to the repo: Settings -> Collaborators Note to collaborators: you will receive an invitation to your email associated with github.com. If you cannnot find it look for the bell notifications on the top right of the website. 2. Clone the repository Each participant should clone the repository so they have their copy on their JupyterHub account space (and locally in the participant's computer, if desired). Navigate through the terminal to the folder where you want to keep Waterhackweek work ( cd path_to_Waterhackweek ). git clone https://github.com/waterhackweek/whw20-proj-myprojectname.git This will create a new folder called whw20-proj-myprojectname . Navigate to the new folder, whw20-proj-myprojectname . 3. Update the README with your name Open the README.md file with your favorite editor and create a new section header. Under this section add your name. Then add this change, commit it to the local repository, and push it so that it appears on the origin GitHub repository. git add README.md git commit -m \"Adding new name to README.md\" git push origin Make sure your change appears online. Remember to run: git status to observe the changes made into the your repository. Pay attention to the colors. To see the changes in the files run git diff . 4. Update your local repository (local clone) with the changes of your collaborators git pull origin master Remember origin is just a short name of the web address of the repository. To see what is hidden in origin: git remote -v To continue practicing these steps, make more changes to the title and the description of the project. Ran into a problem? When working with several people sometimes you cannot push because changes have been made that have not been incorporated: need to first pull when pulling you arrive into a merge conflict: need to resolve the conflict manually 5. Resolving the merge conflict git status You will see the file/s which caused the merge conflict in green. Open it and detect the conflict by the special format: <<<<<<< HEAD my text ======= somebody else's text >>>>>>> 35ab35436 Decide which changes you want to keep, and modify the file so it looks as you wish directly from the editor. Remove the unnecessary characters. Add, commit and push the changes. git add README.md git commit -m \"resolving merge conflict\" git push origin master You can continue working on as usual. Remember to pull often and push small changes ... ... to avoid messing with complicatd merges and keep your repo up-to-date. 6. Avoiding problems: forking workflow So far you collaborated using what is called a \"centralized git workflow\": i.e. every collaborator makes directly changes to the repo. Some merge conflicts can be avoided by working with forks (using a \"forking git workflow) instead of directly pushing to the repo. Forking Git Workflow Here's an excellent guide to the Forking Git Workflow: Step-by-step guide to contributing on GitHub Forks are public copies of the main repo, from which you can submit changes to the main repo. Sync your local repo with the public one Fork the public repo (click on the Fork button) Note it looks the same but the web address contains your username https://github.com/myghusername/whw20-proj-ProjectName Go to your local repo and rename your origin to point to the fork: git remote rm origin git remote add origin https://github.com/myghusername/whw20-proj-ProjectName.git Add a new remote to talk to the main repo: git remote add upstream https://github.com/waterhackweek/whw20-proj-ProjectName.git From now on you will push to origin , but you pull from upstream . Warning \"Make sure your origin contains your github username, and upstream contains the Waterhackweek name.\" Submitting changes via a pull request Make some changes to a file and commit and publish them. git add README.md git commit -m \"more changes\" git push origin master Note They appear on your fork, but not on the main repo. Submit a pull request by clicking New pull request : Explain what changes you have made. Assign somebody for review. Reviewer: look through changes in the files Approve PR or ask for more changes. Note While your pull request is pending, any change you push to the fork will become a part of the request. This is useful if you are asked to make small changes before your PR is accepted. In general we encourage github users to submit changes to the main repo through pull requests, but direct push is still a viable workflow for small projects when participants work on the same documents. Troubleshooting Deleting files git rm filename.txt rm filename.txt Note git rm just removes the file from git, to delete the file completely use the bash rm command after that. Reverting to the previous commit git revert HEAD Note Your files in the local repo will be still there. References and Resources Git and GitHub are very powerful tools but no doubt the learning curve is steep. Learning is an iterative process so below we list some resources which can help you be better prepared: OceanHackWeek (OHW) tutorials OHW20 tutorial: Git/GitHub Survival Guide presentation. pdf and video OHW19 tutorial: Git, GitHub, and Project Collaboration. presentation files and video . This tutorial is the source of most of the materials for this Git page. git-novice - Software Carpentry Lesson (3 hours with exercises) Setting Up Git - Software Carpentry Lesson Atlassian Tutorials - Version Control An excellent guide to the Forking Git Workflow: Step-by-step guide to contributing on GitHub What is GitHub? (3:45 min) GitHub Learning Lab : practice with a bot! (On your own pace) An interactive Git Tutorial: the tool you didn\u2019t know you needed. From personal workflows to open collaboration GeoHackWeek 2019 tutorial: Getting started with Git ICESAT-2HackWeek intro-jupyter-git repo , with several notebooks going into a lot of detail.","title":"Git"},{"location":"prep/git/#git-setup-and-basics","text":"","title":"Git Setup and Basics"},{"location":"prep/git/#about-git-and-github","text":"Git is a popular version control system that is the foundation of most open source software development. You are not required to be a Git pro in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. We will use Git and GitHub for collaborative work. Be sure to arrive at Waterhackweek with your own GitHub account.","title":"About Git and GitHub"},{"location":"prep/git/#git-installation","text":"Windows Install Git for Windows from this link . For more setup details follow these instructions Mac OS Download the git installer and run it. Linux (Debian): sudo apt install git-all To test open the terminal (on Windows, Git Bash) and setup your username and email: git config --global user.name \"your username\" git config --global user.email \"your email\"","title":"Git Installation"},{"location":"prep/git/#getting-started-with-bash-terminal","text":"During the hackweek it will be useful to know how to navigate between files from the command line. If you are not familiar with the linux shell commands, you can review the first three sections of this Software Carpentry Shell Novice lesson. On Windows, use the Git Bash terminal to run these commands.","title":"Getting started with Bash terminal"},{"location":"prep/git/#terminal-command-line-text-editor","text":"When working on the command line (the terminal or shell), it is often handy to modify file content directly from there. For that you can use a command line editor such as nano . On Mac and Linux it is usually pre-installed, but for Windows you can follow the instructions in this link to set it up. Test your installation by opening a terminal and running nano --version . If it works you can link your git configuration with nano : git config --global core.editor \"nano -w\"","title":"Terminal (command line) text editor"},{"location":"prep/git/#git-steps-and-workflows","text":"Centralized vs Fork-Clone workflows Steps 1-5 focus on the Git \"centralized workflow\". We present it here as an illustration, but the workflow we recommend for use in Waterhackweek is the Git Fork - Clone workflow, discussed in Step 6.","title":"Git steps and workflows"},{"location":"prep/git/#1-create-a-project-repository","text":"On your own or someone in your project group (preferably one who has never done it before), create a repository for the project under the Waterhackweek organization, https://github.com/waterhackweek Click New and follow the steps: check yes to create a README.md file. Format project name as whw20-proj-myprojectname (you can change the name later), where myprojectname is a brief name for your project Invite others to the repo: Settings -> Collaborators Note to collaborators: you will receive an invitation to your email associated with github.com. If you cannnot find it look for the bell notifications on the top right of the website.","title":"1. Create a project repository"},{"location":"prep/git/#2-clone-the-repository","text":"Each participant should clone the repository so they have their copy on their JupyterHub account space (and locally in the participant's computer, if desired). Navigate through the terminal to the folder where you want to keep Waterhackweek work ( cd path_to_Waterhackweek ). git clone https://github.com/waterhackweek/whw20-proj-myprojectname.git This will create a new folder called whw20-proj-myprojectname . Navigate to the new folder, whw20-proj-myprojectname .","title":"2. Clone the repository"},{"location":"prep/git/#3-update-the-readme-with-your-name","text":"Open the README.md file with your favorite editor and create a new section header. Under this section add your name. Then add this change, commit it to the local repository, and push it so that it appears on the origin GitHub repository. git add README.md git commit -m \"Adding new name to README.md\" git push origin Make sure your change appears online. Remember to run: git status to observe the changes made into the your repository. Pay attention to the colors. To see the changes in the files run git diff .","title":"3. Update the README with your name"},{"location":"prep/git/#4-update-your-local-repository-local-clone-with-the-changes-of-your-collaborators","text":"git pull origin master Remember origin is just a short name of the web address of the repository. To see what is hidden in origin: git remote -v To continue practicing these steps, make more changes to the title and the description of the project. Ran into a problem? When working with several people sometimes you cannot push because changes have been made that have not been incorporated: need to first pull when pulling you arrive into a merge conflict: need to resolve the conflict manually","title":"4. Update your local repository (local clone) with the changes of your collaborators"},{"location":"prep/git/#5-resolving-the-merge-conflict","text":"git status You will see the file/s which caused the merge conflict in green. Open it and detect the conflict by the special format: <<<<<<< HEAD my text ======= somebody else's text >>>>>>> 35ab35436 Decide which changes you want to keep, and modify the file so it looks as you wish directly from the editor. Remove the unnecessary characters. Add, commit and push the changes. git add README.md git commit -m \"resolving merge conflict\" git push origin master You can continue working on as usual. Remember to pull often and push small changes ... ... to avoid messing with complicatd merges and keep your repo up-to-date.","title":"5. Resolving the merge conflict"},{"location":"prep/git/#6-avoiding-problems-forking-workflow","text":"So far you collaborated using what is called a \"centralized git workflow\": i.e. every collaborator makes directly changes to the repo. Some merge conflicts can be avoided by working with forks (using a \"forking git workflow) instead of directly pushing to the repo. Forking Git Workflow Here's an excellent guide to the Forking Git Workflow: Step-by-step guide to contributing on GitHub Forks are public copies of the main repo, from which you can submit changes to the main repo. Sync your local repo with the public one Fork the public repo (click on the Fork button) Note it looks the same but the web address contains your username https://github.com/myghusername/whw20-proj-ProjectName Go to your local repo and rename your origin to point to the fork: git remote rm origin git remote add origin https://github.com/myghusername/whw20-proj-ProjectName.git Add a new remote to talk to the main repo: git remote add upstream https://github.com/waterhackweek/whw20-proj-ProjectName.git From now on you will push to origin , but you pull from upstream . Warning \"Make sure your origin contains your github username, and upstream contains the Waterhackweek name.\"","title":"6. Avoiding problems: forking workflow"},{"location":"prep/git/#submitting-changes-via-a-pull-request","text":"Make some changes to a file and commit and publish them. git add README.md git commit -m \"more changes\" git push origin master Note They appear on your fork, but not on the main repo. Submit a pull request by clicking New pull request : Explain what changes you have made. Assign somebody for review. Reviewer: look through changes in the files Approve PR or ask for more changes. Note While your pull request is pending, any change you push to the fork will become a part of the request. This is useful if you are asked to make small changes before your PR is accepted. In general we encourage github users to submit changes to the main repo through pull requests, but direct push is still a viable workflow for small projects when participants work on the same documents.","title":"Submitting changes via a pull request"},{"location":"prep/git/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"prep/git/#deleting-files","text":"git rm filename.txt rm filename.txt Note git rm just removes the file from git, to delete the file completely use the bash rm command after that.","title":"Deleting files"},{"location":"prep/git/#reverting-to-the-previous-commit","text":"git revert HEAD Note Your files in the local repo will be still there.","title":"Reverting to the previous commit"},{"location":"prep/git/#references-and-resources","text":"Git and GitHub are very powerful tools but no doubt the learning curve is steep. Learning is an iterative process so below we list some resources which can help you be better prepared: OceanHackWeek (OHW) tutorials OHW20 tutorial: Git/GitHub Survival Guide presentation. pdf and video OHW19 tutorial: Git, GitHub, and Project Collaboration. presentation files and video . This tutorial is the source of most of the materials for this Git page. git-novice - Software Carpentry Lesson (3 hours with exercises) Setting Up Git - Software Carpentry Lesson Atlassian Tutorials - Version Control An excellent guide to the Forking Git Workflow: Step-by-step guide to contributing on GitHub What is GitHub? (3:45 min) GitHub Learning Lab : practice with a bot! (On your own pace) An interactive Git Tutorial: the tool you didn\u2019t know you needed. From personal workflows to open collaboration GeoHackWeek 2019 tutorial: Getting started with Git ICESAT-2HackWeek intro-jupyter-git repo , with several notebooks going into a lot of detail.","title":"References and Resources"},{"location":"prep/github/","text":"GitHub About Git and GitHub Git is a popular version control system that is the foundation of most open source software development. You are not required to be a Git pro in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. We will use Git and GitHub for collaborative work. Be sure to arrive at Waterhackweek with your own GitHub account. Why do I need a GitHub account? There are two reasons you are required to have a GitHub account for the hackweek: All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later! Why are we joining a GitHub Organization? GitHub organizations are a convenient way for teams to get all content relevant to a specific project or workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have \"teams\" that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called Waterhackweek at https://github.com/waterhackweek . For security purposes you can only join the organization by invitation. You should already have received the invitation to GitHub. If you didn't: Once you have a GitHub ID, send it to Owen Freed on our Slack channel We will then send you an invitation which should generate an email notification to the email you provided when you signed up for GitHub Follow the links in the email to accept the invitation How will GitHub repositories be structured? When you click on the \"Repositories\" tab in the Waterhackweek GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each past project. There is a repository for the public-facing website you used to register for this event, and a repository for the Learning Resources web site. We'll also create new repositories for each project when we meet in person. How do I learn more? We encourage you to start practicing with Git and GitHub in advance of this event. See the additional resources listed in the Git page .","title":"GitHub"},{"location":"prep/github/#github","text":"","title":"GitHub"},{"location":"prep/github/#about-git-and-github","text":"Git is a popular version control system that is the foundation of most open source software development. You are not required to be a Git pro in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. We will use Git and GitHub for collaborative work. Be sure to arrive at Waterhackweek with your own GitHub account.","title":"About Git and GitHub"},{"location":"prep/github/#why-do-i-need-a-github-account","text":"There are two reasons you are required to have a GitHub account for the hackweek: All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later!","title":"Why do I need a GitHub account?"},{"location":"prep/github/#why-are-we-joining-a-github-organization","text":"GitHub organizations are a convenient way for teams to get all content relevant to a specific project or workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have \"teams\" that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called Waterhackweek at https://github.com/waterhackweek . For security purposes you can only join the organization by invitation. You should already have received the invitation to GitHub. If you didn't: Once you have a GitHub ID, send it to Owen Freed on our Slack channel We will then send you an invitation which should generate an email notification to the email you provided when you signed up for GitHub Follow the links in the email to accept the invitation","title":"Why are we joining a GitHub Organization?"},{"location":"prep/github/#how-will-github-repositories-be-structured","text":"When you click on the \"Repositories\" tab in the Waterhackweek GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each past project. There is a repository for the public-facing website you used to register for this event, and a repository for the Learning Resources web site. We'll also create new repositories for each project when we meet in person.","title":"How will GitHub repositories be structured?"},{"location":"prep/github/#how-do-i-learn-more","text":"We encourage you to start practicing with Git and GitHub in advance of this event. See the additional resources listed in the Git page .","title":"How do I learn more?"},{"location":"prep/jupyterhub/","text":"Jupyter and JupyterHub Jupyter notebooks and the Jupyter ecosystem You may have heard of Jupyter -- an open computing \"ecosystem\" developed by Project Jupyter . This ecosystem is described succinctly and effectively in the online open book, Teaching and Learning with Jupyter : Project Jupyter is three things: a collection of standards, a community, and a set of software tools. Jupyter Notebook, one part of Jupyter, is software that creates a Jupyter notebook. A Jupyter notebook is a document that supports mixing executable code, equations, visualizations, and narrative text. Specifically, Jupyter notebooks allow the user to bring together data, code, and prose, to tell an interactive, computational story. ( \"2.2 But first, what is Jupyter Notebook?\" ) We will use the JupyterLab software to create, manage and run Jupyter notebooks. You will be exposed to Jupyter notebooks throughout the hackweek, including in most tutorials. To learn more about Jupyter, Jupyter notebooks and JupyterLab: Check out several sections in the Teaching and Learning with Jupyter online open book, specially Chapter 5 Jupyter Notebook ecosystem . See the OceanHackWeek 2020 pre-hackweek tutorial \"Jupyter and Scientific Python basics: numpy, pandas, matplotlib\", which demonstrates effective Jupyter use both on your computer (\"locally\") and on JupyterHub: Jupyter notebooks \u2014 tutorial video . The video includes Q&As at the end where you'll find common questions you may find asking yourself. See the resources at the end of this page . Why are we using a shared cloud computing environment? Teaching software to a diverse group of participants, each with different computers and operating systems, can be challenging. There are specific ways to configure our software for the tutorials to be successful, so it takes time to get everyone set up consistently. Our solution to this is to give everyone access to a cloud computing environment that is pre-configured for the specific software we will deploy. This cloud computing instance can be accessed from any web browser, which eliminates the need for configuring each person's individual computer. For this hackweek we have created virtual computing instances that can be deployed on demand in a parallel computing environment. We use JupyterHub as a way to give a Jupyter Notebook server ( JupyterLab ) to each person in a group. These (slightly old) slides give a nice overview of what JupyterHub is all about. JupyterHub enables us to quickly begin working with code without spending time to get the necessary libraries and dependencies set up on everyone's individual computers. We encourage you to use our shared JupyterHub resources for running all the tutorials and for your projects. We also hope you will practice installing Python libraries locally on your laptop so that you can continue working after leaving our event. How do I access the shared JupyterHub cloud environment? Access to our shared JupyterHub cloud environment is easy. Just click on https://jupyterhub.cuahsi.org Assuming you set up your HydroShare credentials correctly, you can now click on the \"Sign in with HydroShare\" button (after accepting the Terms of Use), then on the next screen click on \"Authorize\" to grant JupyterHub the required permissions. Next you'll be presented with a list of \"Server Options\". Select \"WaterHackWeek 2020\": then click the \"Start\" button. You'll see something like this while the JupyterHub WaterHackWeek 2020 server environment is loading: It will take a little bit of time for this to load - be patient! Once things are spun up you will see your very own instance of a JupyterLab graphical user interface: How do I get my code in and out of JupyterHub? When you start your own instance of JupyterHub you will have access to your own virtual drive space. No other JupyterHub users will be able to see or access your data files. Next we will explain how you can upload files to your virtual drive space and how to save files from JupyterHub back to another location, such as GitHub or your own local laptop drive. First we'll show you how to pull some files from GitHub into your virtual drive space. This will be a common task during the hackweek: at the start of most tutorials we'll ask you to \"clone\" (make a copy of) the GitHub repository corresponding to the specific tutorial being taught into your JupyterHub drive space. To do this, we will need to interface with the JupyterHub file system. JupyterHub is deployed in a Linux operating system and we will need to open a terminal within the JupyterHub JupyterLab interface to manage our files. There are two ways to do this: (1) Navigate to the \"File\" menu, choose \"New\" and then \"Terminal\" or (2) click on the \"terminal\" button in JupyterLab: This will open a new terminal tab in your JupyterLab interface: You can issue any Linux commands to manage your local file system. Now let's clone a repository (see the Git Setup and Basics page). We'll illustrate this with the waterdata tutorials First, navigate in a browser on your own computer to the repository link https://github.com/waterhackweek/waterdata . Next, click on the green \"clone or download\" button and then copy the url into your clipboard by clicking the copy button (the screenshot below is not from the same repository, but the steps and button are the same): Now navigate back to your command line in JupyterLab. Type git clone and then paste in the url: git clone https://github.com/waterhackweek/waterdata.git After issuing the git clone command you should see something like this (again, the screenshot below is for a different repo, but the concept is identical): How do I end my JupyterHub session? Will I lose all of my work? When you are finished working for the day it is important to explicitly log out of your JupyterHub session, to reduce the load on our cloud infrastructure. To log out and stop the server, select the menu item File > Log Out . logging out Logging out will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day. References and Resources Why Jupyter is data scientists\u2019 computational notebook of choice. An improved architecture and enthusiastic user base are driving uptake of the open-source web tool (Nature, 2018-10) Teaching and Learning with Jupyter , an online open book. OceanHackWeek 2020 pre-hackweek tutorial \"Jupyter and Scientific Python basics: numpy, pandas, matplotlib\": Jupyter notebooks \u2014 tutorial video . From https://dataquest.io Jupyter Notebook for Beginners: A Tutorial Tutorial: Advanced Jupyter Notebooks 28 Jupyter Notebook Tips, Tricks, and Shortcuts Getting Started with JupyterLab Lesson 0b: Introduction to JupyterLab - (Justin Bois) Introduction to Data Analysis in the Biological Sciences, Caltech Jupyter Lab: Evolution of the Jupyter Notebook. An overview of JupyterLab, the next generation of the Jupyter Notebook.","title":"Jupyter and JupyterHub"},{"location":"prep/jupyterhub/#jupyter-and-jupyterhub","text":"","title":"Jupyter and JupyterHub"},{"location":"prep/jupyterhub/#jupyter-notebooks-and-the-jupyter-ecosystem","text":"You may have heard of Jupyter -- an open computing \"ecosystem\" developed by Project Jupyter . This ecosystem is described succinctly and effectively in the online open book, Teaching and Learning with Jupyter : Project Jupyter is three things: a collection of standards, a community, and a set of software tools. Jupyter Notebook, one part of Jupyter, is software that creates a Jupyter notebook. A Jupyter notebook is a document that supports mixing executable code, equations, visualizations, and narrative text. Specifically, Jupyter notebooks allow the user to bring together data, code, and prose, to tell an interactive, computational story. ( \"2.2 But first, what is Jupyter Notebook?\" ) We will use the JupyterLab software to create, manage and run Jupyter notebooks. You will be exposed to Jupyter notebooks throughout the hackweek, including in most tutorials. To learn more about Jupyter, Jupyter notebooks and JupyterLab: Check out several sections in the Teaching and Learning with Jupyter online open book, specially Chapter 5 Jupyter Notebook ecosystem . See the OceanHackWeek 2020 pre-hackweek tutorial \"Jupyter and Scientific Python basics: numpy, pandas, matplotlib\", which demonstrates effective Jupyter use both on your computer (\"locally\") and on JupyterHub: Jupyter notebooks \u2014 tutorial video . The video includes Q&As at the end where you'll find common questions you may find asking yourself. See the resources at the end of this page .","title":"Jupyter notebooks and the Jupyter ecosystem"},{"location":"prep/jupyterhub/#why-are-we-using-a-shared-cloud-computing-environment","text":"Teaching software to a diverse group of participants, each with different computers and operating systems, can be challenging. There are specific ways to configure our software for the tutorials to be successful, so it takes time to get everyone set up consistently. Our solution to this is to give everyone access to a cloud computing environment that is pre-configured for the specific software we will deploy. This cloud computing instance can be accessed from any web browser, which eliminates the need for configuring each person's individual computer. For this hackweek we have created virtual computing instances that can be deployed on demand in a parallel computing environment. We use JupyterHub as a way to give a Jupyter Notebook server ( JupyterLab ) to each person in a group. These (slightly old) slides give a nice overview of what JupyterHub is all about. JupyterHub enables us to quickly begin working with code without spending time to get the necessary libraries and dependencies set up on everyone's individual computers. We encourage you to use our shared JupyterHub resources for running all the tutorials and for your projects. We also hope you will practice installing Python libraries locally on your laptop so that you can continue working after leaving our event.","title":"Why are we using a shared cloud computing environment?"},{"location":"prep/jupyterhub/#how-do-i-access-the-shared-jupyterhub-cloud-environment","text":"Access to our shared JupyterHub cloud environment is easy. Just click on https://jupyterhub.cuahsi.org Assuming you set up your HydroShare credentials correctly, you can now click on the \"Sign in with HydroShare\" button (after accepting the Terms of Use), then on the next screen click on \"Authorize\" to grant JupyterHub the required permissions. Next you'll be presented with a list of \"Server Options\". Select \"WaterHackWeek 2020\": then click the \"Start\" button. You'll see something like this while the JupyterHub WaterHackWeek 2020 server environment is loading: It will take a little bit of time for this to load - be patient! Once things are spun up you will see your very own instance of a JupyterLab graphical user interface:","title":"How do I access the shared JupyterHub cloud environment?"},{"location":"prep/jupyterhub/#how-do-i-get-my-code-in-and-out-of-jupyterhub","text":"When you start your own instance of JupyterHub you will have access to your own virtual drive space. No other JupyterHub users will be able to see or access your data files. Next we will explain how you can upload files to your virtual drive space and how to save files from JupyterHub back to another location, such as GitHub or your own local laptop drive. First we'll show you how to pull some files from GitHub into your virtual drive space. This will be a common task during the hackweek: at the start of most tutorials we'll ask you to \"clone\" (make a copy of) the GitHub repository corresponding to the specific tutorial being taught into your JupyterHub drive space. To do this, we will need to interface with the JupyterHub file system. JupyterHub is deployed in a Linux operating system and we will need to open a terminal within the JupyterHub JupyterLab interface to manage our files. There are two ways to do this: (1) Navigate to the \"File\" menu, choose \"New\" and then \"Terminal\" or (2) click on the \"terminal\" button in JupyterLab: This will open a new terminal tab in your JupyterLab interface: You can issue any Linux commands to manage your local file system. Now let's clone a repository (see the Git Setup and Basics page). We'll illustrate this with the waterdata tutorials First, navigate in a browser on your own computer to the repository link https://github.com/waterhackweek/waterdata . Next, click on the green \"clone or download\" button and then copy the url into your clipboard by clicking the copy button (the screenshot below is not from the same repository, but the steps and button are the same): Now navigate back to your command line in JupyterLab. Type git clone and then paste in the url: git clone https://github.com/waterhackweek/waterdata.git After issuing the git clone command you should see something like this (again, the screenshot below is for a different repo, but the concept is identical):","title":"How do I get my code in and out of JupyterHub?"},{"location":"prep/jupyterhub/#how-do-i-end-my-jupyterhub-session-will-i-lose-all-of-my-work","text":"When you are finished working for the day it is important to explicitly log out of your JupyterHub session, to reduce the load on our cloud infrastructure. To log out and stop the server, select the menu item File > Log Out . logging out Logging out will NOT cause any of your work to be lost or deleted. It simply shuts down some resources. It would be equivalent to turning off your desktop computer at the end of the day.","title":"How do I end my JupyterHub session? Will I lose all of my work?"},{"location":"prep/jupyterhub/#references-and-resources","text":"Why Jupyter is data scientists\u2019 computational notebook of choice. An improved architecture and enthusiastic user base are driving uptake of the open-source web tool (Nature, 2018-10) Teaching and Learning with Jupyter , an online open book. OceanHackWeek 2020 pre-hackweek tutorial \"Jupyter and Scientific Python basics: numpy, pandas, matplotlib\": Jupyter notebooks \u2014 tutorial video . From https://dataquest.io Jupyter Notebook for Beginners: A Tutorial Tutorial: Advanced Jupyter Notebooks 28 Jupyter Notebook Tips, Tricks, and Shortcuts Getting Started with JupyterLab Lesson 0b: Introduction to JupyterLab - (Justin Bois) Introduction to Data Analysis in the Biological Sciences, Caltech Jupyter Lab: Evolution of the Jupyter Notebook. An overview of JupyterLab, the next generation of the Jupyter Notebook.","title":"References and Resources"},{"location":"prep/pythonecosystem/","text":"Scientific Python Ecosystem conda, installation: - https://carpentrieslab.github.io/python-aos-lesson/01-conda/index.html - http://bebi103.caltech.edu.s3-website-us-east-1.amazonaws.com/2019a/content/lessons/lesson_00/l00a_python_for_scientific_computing.html From Jupyter Book https://jupyter4edu.github.io/jupyter-edu-book/jupyter.html#essential-python-libraries Among the vast number of packages in the Python ecosystem, NumPy, Scipy, Matplotlib and Pandas are among the most commonly used. A good resource for getting familiar with these libraries is the Scipy Lecture Notes https://scipy-lectures.org/. Numpy (http://www.numpy.org/) is a fundamental library for numerical and scientific computing with Python. It contains data structures for numerical arrays, tools for linear algebra, random number capabilities, and much more. SciPy (https://docs.scipy.org/) offers a varied set of functions for scientific computing, such as optimization, interpolation, statistics and signal processing. It also includes fundamental constants from many disciplines such as the speed of light as well as data structures for sparse matrices. Matplotlib (https://matplotlib.org/) is the core plotting library for Python and can be used inline in the notebook with the %matplotlib notebook or %matplotlib inline cell magics. Pandas (https://pandas.pydata.org/) provides resources for data analysis and a flexible data structures for labeled tabular data. Other Yifan's and Steven's tutorials will cover some of the basics of numpy, matplotlib and pandas Numpy: https://github.com/waterhackweek/waterdata/blob/master/gridded_data_tutorial_0.ipynb xarray: https://github.com/waterhackweek/waterdata/blob/master/gridded_data_tutorial_1.ipynb From OHW20: Jupyter and Scientific Python basics: numpy, pandas, matplotlib. Jupyter notebooks \u2014 video Numpy, SciPy, Matplotlib: https://scipy-lectures.org/ Pandas: https://scipy-lectures.org/packages/statistics/index.html#data-representation-and-interaction https://unidata.github.io/python-training/workshop/workshop-intro/ Beyond numpy, matplotlib, pandas Software Carpentry AOS tutorials / site xarray xarray \"how tos\" page; pangeo blog posts, gallery? http://xarray.pydata.org/en/stable/quick-overview.html http://xarray.pydata.org/en/stable/howdoi.html Deepak's OHW tutorial! a previous GHW xarray intro? geopandas my GHW tutorial","title":"Scientific Python Ecosystem"},{"location":"prep/pythonecosystem/#scientific-python-ecosystem","text":"conda, installation: - https://carpentrieslab.github.io/python-aos-lesson/01-conda/index.html - http://bebi103.caltech.edu.s3-website-us-east-1.amazonaws.com/2019a/content/lessons/lesson_00/l00a_python_for_scientific_computing.html","title":"Scientific Python Ecosystem"},{"location":"prep/pythonecosystem/#from-jupyter-book","text":"https://jupyter4edu.github.io/jupyter-edu-book/jupyter.html#essential-python-libraries Among the vast number of packages in the Python ecosystem, NumPy, Scipy, Matplotlib and Pandas are among the most commonly used. A good resource for getting familiar with these libraries is the Scipy Lecture Notes https://scipy-lectures.org/. Numpy (http://www.numpy.org/) is a fundamental library for numerical and scientific computing with Python. It contains data structures for numerical arrays, tools for linear algebra, random number capabilities, and much more. SciPy (https://docs.scipy.org/) offers a varied set of functions for scientific computing, such as optimization, interpolation, statistics and signal processing. It also includes fundamental constants from many disciplines such as the speed of light as well as data structures for sparse matrices. Matplotlib (https://matplotlib.org/) is the core plotting library for Python and can be used inline in the notebook with the %matplotlib notebook or %matplotlib inline cell magics. Pandas (https://pandas.pydata.org/) provides resources for data analysis and a flexible data structures for labeled tabular data.","title":"From Jupyter Book"},{"location":"prep/pythonecosystem/#other","text":"Yifan's and Steven's tutorials will cover some of the basics of numpy, matplotlib and pandas Numpy: https://github.com/waterhackweek/waterdata/blob/master/gridded_data_tutorial_0.ipynb xarray: https://github.com/waterhackweek/waterdata/blob/master/gridded_data_tutorial_1.ipynb From OHW20: Jupyter and Scientific Python basics: numpy, pandas, matplotlib. Jupyter notebooks \u2014 video Numpy, SciPy, Matplotlib: https://scipy-lectures.org/ Pandas: https://scipy-lectures.org/packages/statistics/index.html#data-representation-and-interaction https://unidata.github.io/python-training/workshop/workshop-intro/","title":"Other"},{"location":"prep/pythonecosystem/#beyond-numpy-matplotlib-pandas","text":"Software Carpentry AOS tutorials / site xarray xarray \"how tos\" page; pangeo blog posts, gallery? http://xarray.pydata.org/en/stable/quick-overview.html http://xarray.pydata.org/en/stable/howdoi.html Deepak's OHW tutorial! a previous GHW xarray intro? geopandas my GHW tutorial","title":"Beyond numpy, matplotlib, pandas"},{"location":"tutorials/getting_started/","text":"Getting started on tutorials Introduction Most tutorials will be run live as Jupyter notebooks on the OceanHackWeek JupyterHub (\"The Hub\") in your browser. The instructor and and all participants can be running their own copies of the notebooks in their Hub account, with files cloned from the OHW source in GitHub. Below are instructions for getting the tutorials started on the the Hub in your browser, and updating the tutorials files with the latest version from GitHub. The schedule of tutorials is available here , and links to tutorial materials and some background resources are availabe elsewhere in the Tutorials section. Pre-Hackweek tutorials Git and GitHub, including the Git fork - clone \"workflow\". Presentation slides (pdf) \u2014 video Jupyter and Scientific Python basics: numpy, pandas, matplotlib. Jupyter notebooks \u2014 video Start the Hub in your browser Step 1 Navigate to the OceanHackWeek Hub, https://ocean.hackweek.io/ . Step 2 Sign in using your GitHub account, if you are not already signed in. (First time only: Grant the OceanHackWeek Organization permissions - this grants you access to the cloud computing environment for the Hackweek.) Step 3 Start the \"Oceanhackweek\" computing environement (the Oceanhackweek \"image\"). It may take up to a minute or so to start up. Upload ( git clone ) a copy of the oh20-tutorials GitHub repository and follow along This basic workflow allows you to follow along with tutorials with your own live copy of the tutorials notebooks while staying up-to-date with any changes made to the master tutorials repository, ohw20-tutorials . Shortcut The first time you try to upload ( git clone ) the ohw20-tutorials repository, launch a new terminal, then enter: git clone https://github.com/oceanhackweek/ohw20-tutorials.git Now you have a new ohw20-tutorials directory under your \"home\" directory, /home/jovyan . You're good to go! Longer description - Step 1 Navigate to the tutorial repository on GitHub . Clone the tutorial to the Hub environment. You can easily copy the link to a repository by selecting the green \"clone or download\" dropdown (making sure the pop up says \"Clone with HTTPS\") and hitting the clipboard icon, which will automatically copy the link for you. Launch a terminal using the \"plus\" sign in the upper left corner of your JupyterHub: then execute the git clone statement: git clone https://github.com/oceanhackweek/ohw20-tutorials.git A new ohw20-tutorials directory will be created, holding the repository clone. Step 2 Follow along by opening and running the tutorial notebooks. You can save changes within your clone (such as edits to a notebook) or add other files, then download a copy to your local machine if you'd like. Step 3 Update your Hub copy with any changes to the origin repository. If you have saved changes within your local copy of the notebook or added other files, this may cause conflicts ( ask us questions if you run into problems! ). Fetch and merge (using git pull ) the latest changes from the origin remote. git pull origin These instructions assume you're working on the default master branch. Please note: the OceanHackWeek JupyterHub (the Hub) should not be relied upon to save your files beyond the duration of the hackweek, and will be removed a couple of weeks after the hackweek. Thus, for any non-repository changes or repository changes that have not been pushed to GitHub, you MUST complete Step 3 to save the files to your local machine if you would like continued access to them. Adapted from https://icesat-2hackweek.github.io/learning-resources/tutorials/getting_started/ . Originally from https://medium.com/sweetmeat/how-to-keep-a-downstream-git-repository-current-with-upstream-repository-changes-10b76fad6d97","title":"Getting started on tutorials"},{"location":"tutorials/getting_started/#getting-started-on-tutorials","text":"","title":"Getting started on tutorials"},{"location":"tutorials/getting_started/#introduction","text":"Most tutorials will be run live as Jupyter notebooks on the OceanHackWeek JupyterHub (\"The Hub\") in your browser. The instructor and and all participants can be running their own copies of the notebooks in their Hub account, with files cloned from the OHW source in GitHub. Below are instructions for getting the tutorials started on the the Hub in your browser, and updating the tutorials files with the latest version from GitHub. The schedule of tutorials is available here , and links to tutorial materials and some background resources are availabe elsewhere in the Tutorials section.","title":"Introduction"},{"location":"tutorials/getting_started/#pre-hackweek-tutorials","text":"Git and GitHub, including the Git fork - clone \"workflow\". Presentation slides (pdf) \u2014 video Jupyter and Scientific Python basics: numpy, pandas, matplotlib. Jupyter notebooks \u2014 video","title":"Pre-Hackweek tutorials"},{"location":"tutorials/getting_started/#start-the-hub-in-your-browser","text":"","title":"Start the Hub in your browser"},{"location":"tutorials/getting_started/#step-1","text":"Navigate to the OceanHackWeek Hub, https://ocean.hackweek.io/ .","title":"Step 1"},{"location":"tutorials/getting_started/#step-2","text":"Sign in using your GitHub account, if you are not already signed in. (First time only: Grant the OceanHackWeek Organization permissions - this grants you access to the cloud computing environment for the Hackweek.)","title":"Step 2"},{"location":"tutorials/getting_started/#step-3","text":"Start the \"Oceanhackweek\" computing environement (the Oceanhackweek \"image\"). It may take up to a minute or so to start up.","title":"Step 3"},{"location":"tutorials/getting_started/#upload-git-clone-a-copy-of-the-oh20-tutorials-github-repository-and-follow-along","text":"This basic workflow allows you to follow along with tutorials with your own live copy of the tutorials notebooks while staying up-to-date with any changes made to the master tutorials repository, ohw20-tutorials .","title":"Upload (git clone) a copy of the oh20-tutorials GitHub repository and follow along"},{"location":"tutorials/getting_started/#shortcut","text":"The first time you try to upload ( git clone ) the ohw20-tutorials repository, launch a new terminal, then enter: git clone https://github.com/oceanhackweek/ohw20-tutorials.git Now you have a new ohw20-tutorials directory under your \"home\" directory, /home/jovyan . You're good to go!","title":"Shortcut"},{"location":"tutorials/getting_started/#longer-description-step-1","text":"Navigate to the tutorial repository on GitHub . Clone the tutorial to the Hub environment. You can easily copy the link to a repository by selecting the green \"clone or download\" dropdown (making sure the pop up says \"Clone with HTTPS\") and hitting the clipboard icon, which will automatically copy the link for you. Launch a terminal using the \"plus\" sign in the upper left corner of your JupyterHub: then execute the git clone statement: git clone https://github.com/oceanhackweek/ohw20-tutorials.git A new ohw20-tutorials directory will be created, holding the repository clone.","title":"Longer description - Step 1"},{"location":"tutorials/getting_started/#step-2_1","text":"Follow along by opening and running the tutorial notebooks. You can save changes within your clone (such as edits to a notebook) or add other files, then download a copy to your local machine if you'd like.","title":"Step 2"},{"location":"tutorials/getting_started/#step-3_1","text":"Update your Hub copy with any changes to the origin repository. If you have saved changes within your local copy of the notebook or added other files, this may cause conflicts ( ask us questions if you run into problems! ). Fetch and merge (using git pull ) the latest changes from the origin remote. git pull origin These instructions assume you're working on the default master branch. Please note: the OceanHackWeek JupyterHub (the Hub) should not be relied upon to save your files beyond the duration of the hackweek, and will be removed a couple of weeks after the hackweek. Thus, for any non-repository changes or repository changes that have not been pushed to GitHub, you MUST complete Step 3 to save the files to your local machine if you would like continued access to them. Adapted from https://icesat-2hackweek.github.io/learning-resources/tutorials/getting_started/ . Originally from https://medium.com/sweetmeat/how-to-keep-a-downstream-git-repository-current-with-upstream-repository-changes-10b76fad6d97","title":"Step 3"}]}